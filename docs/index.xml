<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LDS Control &amp; Estimation on LDS C&amp;E</title>
    <link>https://stanley-rozell.github.io/lds-ctrl-est/</link>
    <description>Recent content in LDS Control &amp; Estimation on LDS C&amp;E</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://stanley-rozell.github.io/lds-ctrl-est/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/acknowledgements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/acknowledgements/</guid>
      <description>Acknowledgements #  Development and publication of this library was supported in part by the NIH/NINDS Collaborative Research in Computational Neuroscience (CRCNS)/BRAIN Grant 5R01NS115327-02.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/getting-started/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/getting-started/getting-started/</guid>
      <description>Getting Started #  This library uses the cross-platform tool CMake to orchestrate the building and testing process on Linux, MacOS, and Windows.
ldsCtrlEst requires Armadillo for linear algebra as well as HDF5 for saving output. vcpkg is a cross-platform C++ package manager which allows us to easily install and use the dependencies in isolation.
Downloading the Library #  First, clone the repository along with submodules:
git clone --recurse-submodules https://github.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/issues-contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/issues-contributing/</guid>
      <description>Reporting Issues #  If you encounter bugs when using this library or have specific feature requests that you believe fall within the stated scope of this project, please open an issue on GitHub and use an appropriate issue template where possible. You may also fork the repository and submit pull-requests with your suggested changes.
Contributing #  We welcome any community contributions to this project. Please fork the repository and if possible use clang-format and clang-tidy to conform to the coding format/style of this repository.</description>
    </item>
    
    <item>
      <title>armamexc</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacearmamexc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacearmamexc/</guid>
      <description>arma/mex interface using Matlab C API</description>
    </item>
    
    <item>
      <title>armamexcpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacearmamexcpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacearmamexcpp/</guid>
      <description>arma/mex interface using Matlab C++ API</description>
    </item>
    
    <item>
      <title>C&amp;E</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/terminology/control-estimation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/terminology/control-estimation/</guid>
      <description>Control &amp;amp; Estimation #  The control system provided by this library is comprised of a state estimator and a controller. The estimator is responsible for estimating the latent state of the system, given measurements up to and including the current time (i.e., filtering). At each time step, the controller then uses the resulting state feedback and an internal model of the system to update the inputs to the process being manipulated.</description>
    </item>
    
    <item>
      <title>Control Mode Bit Masks</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/modules/group__control__masks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/modules/group__control__masks/</guid>
      <description>provides fill types for constructing new armadillo vectors, matrices</description>
    </item>
    
    <item>
      <title>Defaults</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/modules/group__defaults/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/modules/group__defaults/</guid>
      <description>Defaults #  
More&amp;hellip; Attributes #      Name     const data_t kDefaultP0 default state estimate covar   const data_t kDefaultQ0 default process noise covar   const data_t kDefaultR0 default output noise covar    Detailed Description #  Default values for common variables (e.g., default diagonal elements of covariances)
Attribute Details #  kDefaultP0 #  static const data_t kDefaultP0 = 1e-6; kDefaultQ0 #  static const data_t kDefaultQ0 = 1e-6; kDefaultR0 #  static const data_t kDefaultR0 = 1e-2;  Updated on 4 May 2022 at 16:59:51 Eastern Daylight Time</description>
    </item>
    
    <item>
      <title>eg_glds_ctrl.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/examples/eg_glds_ctrl_8cpp-example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/examples/eg_glds_ctrl_8cpp-example/</guid>
      <description>eg_glds_ctrl.cpp #  Example GLDS Control
//===-- eg_glds_ctrl.cpp - Example GLDS Control ---------------------------===// // // Copyright 2021 Michael Bolus // Copyright 2021 Georgia Institute of Technology // // Licensed under the Apache License, Version 2.0 (the &amp;#34;License&amp;#34;); // you may not use this file except in compliance with the License. // You may obtain a copy of the License at // // http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, software // distributed under the License is distributed on an &amp;#34;AS IS&amp;#34; BASIS, // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</description>
    </item>
    
    <item>
      <title>eg_glds_du_plds_ctrl.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/examples/eg_glds_du_plds_ctrl_8cpp-example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/examples/eg_glds_du_plds_ctrl_8cpp-example/</guid>
      <description>eg_glds_du_plds_ctrl.cpp #  Example GLDS Control of PLDS where change in control (du) is being updated, rather than amplitude (u).
//===-- eg_glds_du_plds_ctrl.cpp - Example GLDS Delta u Control of PLDS ---===// // // Copyright 2021 Michael Bolus // Copyright 2021 Georgia Institute of Technology // // Licensed under the Apache License, Version 2.0 (the &amp;#34;License&amp;#34;); // you may not use this file except in compliance with the License. // You may obtain a copy of the License at // // http://www.</description>
    </item>
    
    <item>
      <title>eg_plds_ctrl.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/examples/eg_plds_ctrl_8cpp-example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/examples/eg_plds_ctrl_8cpp-example/</guid>
      <description>eg_plds_ctrl.cpp #  Example PLDS Control
//===-- eg_plds_ctrl.cpp - Example PLDS Control ---------------------===// // // Copyright 2021 Michael Bolus // Copyright 2021 Georgia Institute of Technology // // Licensed under the Apache License, Version 2.0 (the &amp;#34;License&amp;#34;); // you may not use this file except in compliance with the License. // You may obtain a copy of the License at // // http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, software // distributed under the License is distributed on an &amp;#34;AS IS&amp;#34; BASIS, // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</description>
    </item>
    
    <item>
      <title>eg_plds_est.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/examples/eg_plds_est_8cpp-example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/examples/eg_plds_est_8cpp-example/</guid>
      <description>eg_plds_est.cpp #  Example PLDS Estimation
//===-- eg_plds_est.cpp - Example PLDS Estimation -------------------------===// // // Copyright 2021 Michael Bolus // Copyright 2021 Georgia Institute of Technology // // Licensed under the Apache License, Version 2.0 (the &amp;#34;License&amp;#34;); // you may not use this file except in compliance with the License. // You may obtain a copy of the License at // // http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, software // distributed under the License is distributed on an &amp;#34;AS IS&amp;#34; BASIS, // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</description>
    </item>
    
    <item>
      <title>eg_plds_switched_ctrl.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/examples/eg_plds_switched_ctrl_8cpp-example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/examples/eg_plds_switched_ctrl_8cpp-example/</guid>
      <description>eg_plds_switched_ctrl.cpp #  Example Switched PLDS Control
//===-- eg_plds_switched_ctrl.cpp - Example Switched PLDS Control ---===// // // Copyright 2021 Michael Bolus // Copyright 2021 Georgia Institute of Technology // // Licensed under the Apache License, Version 2.0 (the &amp;#34;License&amp;#34;); // you may not use this file except in compliance with the License. // You may obtain a copy of the License at // // http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, software // distributed under the License is distributed on an &amp;#34;AS IS&amp;#34; BASIS, // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</description>
    </item>
    
    <item>
      <title>examples</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_d28a4824dc47e487b107a5db32ef43c4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_d28a4824dc47e487b107a5db32ef43c4/</guid>
      <description>examples #  Files #     Name     examples/eg_glds_ctrl.cpp   examples/eg_glds_du_plds_ctrl.cpp   examples/eg_plds_ctrl.cpp   examples/eg_plds_est.cpp   examples/eg_plds_switched_ctrl.cpp     Updated on 4 May 2022 at 16:59:51 Eastern Daylight Time</description>
    </item>
    
    <item>
      <title>examples/eg_glds_ctrl.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__ctrl_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__ctrl_8cpp/</guid>
      <description>examples/eg_glds_ctrl.cpp #  Functions #      Name     auto main()    Function Details #  main #  auto main() Going to simulate a switching disturbance (m) acting on system
Source code #  //===-- eg_glds_ctrl.cpp - Example GLDS Control ---------------------------===// // // Copyright 2021 Michael Bolus // Copyright 2021 Georgia Institute of Technology // // Licensed under the Apache License, Version 2.</description>
    </item>
    
    <item>
      <title>examples/eg_glds_du_plds_ctrl.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__du__plds__ctrl_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__du__plds__ctrl_8cpp/</guid>
      <description>examples/eg_glds_du_plds_ctrl.cpp #  Functions #      Name     auto main()    Function Details #  main #  auto main() Going to simulate a switching disturbance (m) acting on system
Source code #  //===-- eg_glds_du_plds_ctrl.cpp - Example GLDS Delta u Control of PLDS ---===// // // Copyright 2021 Michael Bolus // Copyright 2021 Georgia Institute of Technology // // Licensed under the Apache License, Version 2.</description>
    </item>
    
    <item>
      <title>examples/eg_plds_ctrl.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__ctrl_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__ctrl_8cpp/</guid>
      <description>examples/eg_plds_ctrl.cpp #  Functions #      Name     auto main()    Function Details #  main #  auto main() Going to simulate a switching disturbance (m) acting on system
Source code #  //===-- eg_plds_ctrl.cpp - Example PLDS Control ---------------------===// // // Copyright 2021 Michael Bolus // Copyright 2021 Georgia Institute of Technology // // Licensed under the Apache License, Version 2.</description>
    </item>
    
    <item>
      <title>examples/eg_plds_est.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__est_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__est_8cpp/</guid>
      <description>examples/eg_plds_est.cpp #  Functions #      Name     Matrix random_walk(size_t n_t, const Matrix &amp;amp; Q, const Vector &amp;amp; x0)   int main()    Function Details #  random_walk #  Matrix random_walk( size_t n_t, const Matrix &amp;amp; Q, const Vector &amp;amp; x0 ) main #  int main() Source code #  //===-- eg_plds_est.cpp - Example PLDS Estimation -------------------------===// // // Copyright 2021 Michael Bolus // Copyright 2021 Georgia Institute of Technology // // Licensed under the Apache License, Version 2.</description>
    </item>
    
    <item>
      <title>examples/eg_plds_switched_ctrl.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__switched__ctrl_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__switched__ctrl_8cpp/</guid>
      <description>examples/eg_plds_switched_ctrl.cpp #  Functions #      Name     auto main()    Function Details #  main #  auto main() Source code #  //===-- eg_plds_switched_ctrl.cpp - Example Switched PLDS Control ---===// // // Copyright 2021 Michael Bolus // Copyright 2021 Georgia Institute of Technology // // Licensed under the Apache License, Version 2.0 (the &amp;#34;License&amp;#34;); // you may not use this file except in compliance with the License.</description>
    </item>
    
    <item>
      <title>GLDS Control</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/tutorials/eg_glds_control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/tutorials/eg_glds_control/</guid>
      <description>GLDS Control Tutorial #  This tutorial shows how to use this library to control a system with a Gaussian LDS controller (lds::gaussian::Controller). In place of a physical system, a GLDS model (lds::gaussian::System) receives control inputs and simulates measurements for the feedback control loop. The controller is assumed to have an imperfect model of the system being controlled (here, a gain mismatch), and there is a stochastic, unmeasured disturbance acting on the system.</description>
    </item>
    
    <item>
      <title>include</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_d44c64559bbebec7f509842c48db8b23/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_d44c64559bbebec7f509842c48db8b23/</guid>
      <description>include #  Directories #     Name     ldsCtrlEst_h     Updated on 4 May 2022 at 16:59:51 Eastern Daylight Time</description>
    </item>
    
    <item>
      <title>lds</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/</guid>
      <description>Linear Dynamical Systems (LDS) namespace.</description>
    </item>
    
    <item>
      <title>lds::Controller</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1controller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1controller/</guid>
      <description>lds::Controller #  More&amp;hellip;
Inherited by lds::gaussian::Controller, lds::poisson::Controller, lds::SwitchedController&amp;lt; System &amp;gt;
Public Functions #      Name      Controller() =default
Constructs a new Controller.    Controller(const System &amp;amp; sys, data_t u_lb, data_t u_ub, size_t control_type =0)
Constructs a new Controller.    Controller(System &amp;amp;&amp;amp; sys, data_t u_lb, data_t u_ub, size_t control_type =0)
Constructs a new Controller by moving the system object.</description>
    </item>
    
    <item>
      <title>lds::EM</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1em/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1em/</guid>
      <description>lds::EM #  More&amp;hellip;
Inherited by lds::gaussian::FitEM, lds::poisson::FitEM
Public Functions #      Name      EM() =default
Constructs a new EMFit type.    EM(size_t n_x, data_t dt, UniformMatrixList&amp;lt; kMatFreeDim2 &amp;gt; &amp;amp;&amp;amp; u_train, UniformMatrixList&amp;lt; kMatFreeDim2 &amp;gt; &amp;amp;&amp;amp; z_train)
Constructs a new EMFit type.    EM(const Fit &amp;amp; fit0, UniformMatrixList&amp;lt; kMatFreeDim2 &amp;gt; &amp;amp;&amp;amp; u_train, UniformMatrixList&amp;lt; kMatFreeDim2 &amp;gt; &amp;amp;&amp;amp; z_train)
Constructs a new EMFit type.</description>
    </item>
    
    <item>
      <title>lds::Fit</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1fit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1fit/</guid>
      <description>LDS Fit Type.</description>
    </item>
    
    <item>
      <title>lds::gaussian</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds_1_1gaussian/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds_1_1gaussian/</guid>
      <description>Linear Dynamical Systems with Gaussian observations.</description>
    </item>
    
    <item>
      <title>lds::gaussian::Controller</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1controller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1controller/</guid>
      <description>Gaussian-observation Controller Type.</description>
    </item>
    
    <item>
      <title>lds::gaussian::Fit</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1fit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1fit/</guid>
      <description>GLDS Fit Type.</description>
    </item>
    
    <item>
      <title>lds::gaussian::FitEM</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1fitem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1fitem/</guid>
      <description>GLDS E-M Fit Type.</description>
    </item>
    
    <item>
      <title>lds::gaussian::FitSSID</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1fitssid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1fitssid/</guid>
      <description>Subspace Identification (SSID) for GLDS.</description>
    </item>
    
    <item>
      <title>lds::gaussian::SwitchedController</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1switchedcontroller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1switchedcontroller/</guid>
      <description>Gaussian-observation SwitchedController Type.</description>
    </item>
    
    <item>
      <title>lds::gaussian::System</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1system/</guid>
      <description>Gaussian LDS Type.</description>
    </item>
    
    <item>
      <title>lds::poisson</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds_1_1poisson/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds_1_1poisson/</guid>
      <description>Linear Dynamical Systems with Poisson observations.</description>
    </item>
    
    <item>
      <title>lds::poisson::Controller</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1controller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1controller/</guid>
      <description>PLDS Controller Type.</description>
    </item>
    
    <item>
      <title>lds::poisson::Fit</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1fit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1fit/</guid>
      <description>PLDS Fit Type.</description>
    </item>
    
    <item>
      <title>lds::poisson::FitEM</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1fitem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1fitem/</guid>
      <description>PLDS E-M Fit Type.</description>
    </item>
    
    <item>
      <title>lds::poisson::FitSSID</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1fitssid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1fitssid/</guid>
      <description>Subspace Identification (SSID) for PLDS.</description>
    </item>
    
    <item>
      <title>lds::poisson::SwitchedController</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1switchedcontroller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1switchedcontroller/</guid>
      <description>Poisson-observation SwitchedController Type.</description>
    </item>
    
    <item>
      <title>lds::poisson::System</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1system/</guid>
      <description>Poisson System type.</description>
    </item>
    
    <item>
      <title>lds::SSID</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1ssid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1ssid/</guid>
      <description>lds::SSID #  More&amp;hellip;
Inherited by lds::gaussian::FitSSID, lds::poisson::FitSSID
Public Functions #      Name      SSID() =default
Constructs a new SSIDFit type.    SSID(size_t n_x, size_t n_h, data_t dt, UniformMatrixList&amp;lt; kMatFreeDim2 &amp;gt; &amp;amp;&amp;amp; u_train, UniformMatrixList&amp;lt; kMatFreeDim2 &amp;gt; &amp;amp;&amp;amp; z_train, const Vector &amp;amp; d =Vector(1).fill(-kInf))
Constructs a new SSIDFit type.   std::tuple&amp;lt; Fit, Vector &amp;gt; Run(SSIDWt ssid_wt)
Runs fitting by subspace identification (SSID)   std::tuple&amp;lt; UniformMatrixList&amp;lt; kMatFreeDim2 &amp;gt;, UniformMatrixList&amp;lt; kMatFreeDim2 &amp;gt; &amp;gt; ReturnData()</description>
    </item>
    
    <item>
      <title>lds::SwitchedController</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1switchedcontroller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1switchedcontroller/</guid>
      <description>SwitchedController Type.</description>
    </item>
    
    <item>
      <title>lds::System</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1system/</guid>
      <description>Linear Dynamical System Type.</description>
    </item>
    
    <item>
      <title>lds::UniformMatrixList</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1uniformmatrixlist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1uniformmatrixlist/</guid>
      <description>lds::UniformMatrixList #  More&amp;hellip;
Inherits from std::vector&amp;lt; Matrix &amp;gt;
Public Functions #      Name      UniformMatrixList() =default
Constructs a new UniformMatrixList.    UniformMatrixList(const std::vector&amp;lt; Matrix &amp;gt; &amp;amp; mats, std::array&amp;lt; size_t, 2 &amp;gt; dim ={0, 0})
Constructs a new UniformMatrixList by copying existing vector of Matrix if dimensions consistent.    UniformMatrixList(std::vector&amp;lt; Matrix &amp;gt; &amp;amp;&amp;amp; mats, std::array&amp;lt; size_t, 2 &amp;gt; dim ={0, 0})</description>
    </item>
    
    <item>
      <title>lds::UniformSystemList</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1uniformsystemlist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1uniformsystemlist/</guid>
      <description>lds::UniformSystemList #  More&amp;hellip;
Inherits from std::vector&amp;lt; System &amp;gt;
Public Functions #      Name      UniformSystemList() =default
Constructs a new UniformSystemList.    UniformSystemList(const std::vector&amp;lt; System &amp;gt; &amp;amp; systems, std::array&amp;lt; size_t, 3 &amp;gt; dim ={0, 0, 0})
Constructs a new UniformSystemList by copying existing vector of System if dimensions consistent.    UniformSystemList(std::vector&amp;lt; System &amp;gt; &amp;amp;&amp;amp; systems, std::array&amp;lt; size_t, 3 &amp;gt; dim ={0, 0, 0})</description>
    </item>
    
    <item>
      <title>lds::UniformVectorList</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1uniformvectorlist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1uniformvectorlist/</guid>
      <description>lds::UniformVectorList #  Inherits from std::vector&amp;lt; Vector &amp;gt;
Public Functions #      Name      UniformVectorList() =default
Constructs a new UniformVectorList.    UniformVectorList(const std::vector&amp;lt; Vector &amp;gt; &amp;amp; vecs, size_t dim =0)
Constructs a new UniformVectorList by copying existing vector of Vector if dimensions consistent.    UniformVectorList(std::vector&amp;lt; Vector &amp;gt; &amp;amp;&amp;amp; vecs, size_t dim =0)
Constructs a new UniformVectorList by moving existing vector of Vector if dimensions consistent.</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_156a98879751e549d6939ca71a62d61f/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_156a98879751e549d6939ca71a62d61f/</guid>
      <description>ldsCtrlEst_h #  Files #     Name     ldsCtrlEst_h/lds.h lds namespace   ldsCtrlEst_h/lds_ctrl.h Controller.   ldsCtrlEst_h/lds_fit.h LDS base fit type.   ldsCtrlEst_h/lds_fit_em.h subspace identification   ldsCtrlEst_h/lds_fit_ssid.h subspace identification   ldsCtrlEst_h/lds_gaussian.h glds namespace   ldsCtrlEst_h/lds_gaussian_ctrl.h GLDS Controller.   ldsCtrlEst_h/lds_gaussian_fit.h GLDS fit type.   ldsCtrlEst_h/lds_gaussian_fit_em.h GLDS E-M fit type.   ldsCtrlEst_h/lds_gaussian_fit_ssid.h GLDS SSID fit type.   ldsCtrlEst_h/lds_gaussian_sctrl.</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds_8h/</guid>
      <description>lds namespace</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_ctrl.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__ctrl_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__ctrl_8h/</guid>
      <description>Controller.</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_fit.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit_8h/</guid>
      <description>LDS base fit type.</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_fit_em.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit__em_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit__em_8h/</guid>
      <description>subspace identification</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_fit_ssid.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit__ssid_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit__ssid_8h/</guid>
      <description>subspace identification</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_gaussian.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian_8h/</guid>
      <description>glds namespace</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_gaussian_ctrl.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__ctrl_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__ctrl_8h/</guid>
      <description>GLDS Controller.</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_gaussian_fit.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit_8h/</guid>
      <description>GLDS fit type.</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_gaussian_fit_em.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit__em_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit__em_8h/</guid>
      <description>GLDS E-M fit type.</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_gaussian_fit_ssid.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit__ssid_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit__ssid_8h/</guid>
      <description>GLDS SSID fit type.</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_gaussian_sctrl.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sctrl_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sctrl_8h/</guid>
      <description>GLDS switched controller type.</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_gaussian_sys.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sys_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sys_8h/</guid>
      <description>GLDS base type.</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_poisson.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson_8h/</guid>
      <description>plds namespace</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_poisson_ctrl.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__ctrl_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__ctrl_8h/</guid>
      <description>PLDS controller type.</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_poisson_fit.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit_8h/</guid>
      <description>PLDS base fit type.</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_poisson_fit_em.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit__em_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit__em_8h/</guid>
      <description>PLDS E-M fit type.</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_poisson_fit_ssid.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit__ssid_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit__ssid_8h/</guid>
      <description>PLDS SSID fit type.</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_poisson_sctrl.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sctrl_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sctrl_8h/</guid>
      <description>PLDS switched controller type.</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_poisson_sys.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sys_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sys_8h/</guid>
      <description>PLDS base type.</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_sctrl.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sctrl_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sctrl_8h/</guid>
      <description>SwitchedController type.</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_sys.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sys_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sys_8h/</guid>
      <description>LDS base type.</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_uniform_mats.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__mats_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__mats_8h/</guid>
      <description>List of uniformly sized matrices.</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_uniform_systems.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__systems_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__systems_8h/</guid>
      <description>List of uniformly sized Systems.</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/lds_uniform_vecs.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__vecs_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__vecs_8h/</guid>
      <description>List of uniformly sized vectors.</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/mex_c_util.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/mex__c__util_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/mex__c__util_8h/</guid>
      <description>arma &amp;lt;-&amp;gt; mex interoperability utilities (Matlab C API)</description>
    </item>
    
    <item>
      <title>ldsCtrlEst_h/mex_cpp_util.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/mex__cpp__util_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/mex__cpp__util_8h/</guid>
      <description>arma &amp;lt;-&amp;gt; mex interoperability utilities (Matlab C++ API)</description>
    </item>
    
    <item>
      <title>Models</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/terminology/model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/terminology/model/</guid>
      <description>Model Definitions #  This library provides methods for control and estimation of linear dynamical systems (LDS) of the following form:   \[\mathbf{x}_{t&amp;#43;1} = f\left( \mathbf{x}_{t}, \mathbf{v}_{t} \right) = \mathbf{A} \mathbf{x}_{t} &amp;#43; \mathbf{B} \mathbf{v}_{t} &amp;#43; \mathbf{m}_{t} &amp;#43; \mathbf{w}_{t}\]   \[\mathbf{y}_{t} = h\left( \mathbf{x}_{t} \right)\]  t : time indexx : system statev = g%u : input (e.g., in physical units used for model fit)u : control signal sent to actuator (e.</description>
    </item>
    
    <item>
      <title>PLDS State Estimation</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/tutorials/eg_plds_state_estimation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/tutorials/eg_plds_state_estimation/</guid>
      <description>PLDS State Estimation Tutorial #  This tutorial shows how to use this library to estimate the state of an LDS with Poisson observations from input/output data. In place of a physical system, another PLDS model (lds::poisson::System) receives random inputs and provides measurements for the state estimator. For the sake of example, the only parameter mismatch is assumed to be the process disturbance, which is adaptively re-estimated.
The full code for this can be found here.</description>
    </item>
    
    <item>
      <title>PLDS Switched Control</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/tutorials/eg_switched_plds_control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/tutorials/eg_switched_plds_control/</guid>
      <description>PLDS Switched Control Tutorial #  This tutorial shows how to use this library to control a system with a switched PLDS controller (lds::poisson::SwitchedController). This type of controller is applicable in scenarios where a physical system is not accurately captured by a single LDS but has multiple discrete operating modes where the dynamics can be well-approximated as linear.
In the example that follows, another PLDS model (lds::poisson::System) is used in place of a physical system.</description>
    </item>
    
    <item>
      <title>src</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_68267d1309a1af8e8297ef4c3efbcdba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_68267d1309a1af8e8297ef4c3efbcdba/</guid>
      <description>src #  Files #     Name     src/lds.cpp misc lds namespace functions   src/lds_gaussian_sys.cpp GLDS base type.   src/lds_poisson_sys.cpp PLDS base type.   src/lds_sys.cpp LDS base type.   src/lds_uniform_vecs.cpp Uniformly sized vectors.     Updated on 4 May 2022 at 16:59:51 Eastern Daylight Time</description>
    </item>
    
    <item>
      <title>src/lds.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds_8cpp/</guid>
      <description>misc lds namespace functions</description>
    </item>
    
    <item>
      <title>src/lds_gaussian_sys.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sys_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sys_8cpp/</guid>
      <description>GLDS base type.</description>
    </item>
    
    <item>
      <title>src/lds_poisson_sys.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sys_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sys_8cpp/</guid>
      <description>PLDS base type.</description>
    </item>
    
    <item>
      <title>src/lds_sys.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sys_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sys_8cpp/</guid>
      <description>LDS base type.</description>
    </item>
    
    <item>
      <title>src/lds_uniform_vecs.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__vecs_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__vecs_8cpp/</guid>
      <description>Uniformly sized vectors.</description>
    </item>
    
  </channel>
</rss>
