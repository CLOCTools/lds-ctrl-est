<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LDS Control &amp; Estimation on LDS C&amp;E</title>
    <link>https://stanley-rozell.github.io/lds-ctrl-est/</link>
    <description>Recent content in LDS Control &amp; Estimation on LDS C&amp;E</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://stanley-rozell.github.io/lds-ctrl-est/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/acknowledgements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/acknowledgements/</guid>
      <description>&lt;h1 id=&#34;acknowledgements&#34;&gt;&#xA;  Acknowledgements&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#acknowledgements&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Development and publication of this library was supported in part by the NIH/NINDS Collaborative Research in Computational Neuroscience (CRCNS)/BRAIN Grant 5R01NS115327-02.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/getting-started/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/getting-started/getting-started/</guid>
      <description>&lt;h1 id=&#34;getting-started&#34;&gt;&#xA;  Getting Started&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#getting-started&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;This library uses the cross-platform tool CMake to orchestrate the building and testing process on Linux, MacOS, and Windows.&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;ldsCtrlEst&lt;/code&gt; requires &lt;a href=&#34;http://arma.sourceforge.net/&#34;&gt;Armadillo&lt;/a&gt; for linear algebra as well as &lt;a href=&#34;https://www.hdfgroup.org/downloads/hdf5/&#34;&gt;HDF5&lt;/a&gt; for saving output. &lt;a href=&#34;https://vcpkg.io/&#34;&gt;&lt;code&gt;vcpkg&lt;/code&gt;&lt;/a&gt; is a cross-platform C++ package manager which allows us to easily install and use the dependencies in isolation.&lt;/p&gt;&#xA;&lt;h2 id=&#34;tested-configurations&#34;&gt;&#xA;  Tested Configurations&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#tested-configurations&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Building C++ libraries with complex dependencies can be tricky business—in our experience builds have inexplicably worked in one environment and failed in another. To save you time, sweat, and tears, we suggest you simply use one of the following setups we know work fairly reliably, using the &lt;code&gt;RelWithDebInfo&lt;/code&gt; build type in the CMake configure command (&lt;code&gt;-DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo&lt;/code&gt;):&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/getting-started/windows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/getting-started/windows/</guid>
      <description>&lt;h1 id=&#34;windows-installation&#34;&gt;&#xA;  Windows Installation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#windows-installation&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;windows-pre-requisites&#34;&gt;&#xA;  Windows Pre-requisites&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#windows-pre-requisites&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Scoop is a very handy tool for easily installing all sorts of command-line applications. Install like this:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Set-ExecutionPolicy RemoteSigned -Scope CurrentUser &lt;span style=&#34;color:#75715e&#34;&gt;# Optional: Needed to run a remote script the first time&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;iwr get.scoop.sh | Invoke-Expression&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Install Git and CMake if you don&amp;rsquo;t already have them:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scoop install git cmake&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If that didn&amp;rsquo;t work, follow more detailed instructions &lt;a href=&#34;https://github.com/ScoopInstaller/Install#readme&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The easiest way to compile C++ project on Windows is with Visual Studio&amp;rsquo;s build tools, which you can download &lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt;here&lt;/a&gt; (or &lt;a href=&#34;https://visualstudio.microsoft.com/vs/older-downloads/&#34;&gt;here&lt;/a&gt; for the 2019 release which we tested—make sure you get the most recent one, e.g., 16.11 at time of writing). In the installer, click on &amp;ldquo;Desktop development with C++.&amp;rdquo; If you want to build Python bindings, you will need to use the Clang compiler, which you can add on the &amp;ldquo;Installation details&amp;rdquo; sidebar under optional features.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/issues-contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/issues-contributing/</guid>
      <description>&lt;h1 id=&#34;reporting-issues&#34;&gt;&#xA;  Reporting Issues&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#reporting-issues&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;If you encounter bugs when using this library or have specific feature requests that you believe fall within the stated scope of this project, please &lt;a href=&#34;https://github.com/stanley-rozell/lds-ctrl-est/issues&#34;&gt;open an issue on GitHub&lt;/a&gt; and use an appropriate issue template where possible. You may also fork the repository and submit pull-requests with your suggested changes.&lt;/p&gt;&#xA;&lt;h1 id=&#34;contributing&#34;&gt;&#xA;  Contributing&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#contributing&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;We welcome any community contributions to this project. Please fork the repository and if possible use &lt;code&gt;clang-format&lt;/code&gt; and &lt;code&gt;clang-tidy&lt;/code&gt; to conform to the coding format/style of this repository.&lt;/p&gt;</description>
    </item>
    <item>
      <title>armamexc</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacearmamexc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacearmamexc/</guid>
      <description>arma/mex interface using Matlab C API</description>
    </item>
    <item>
      <title>armamexcpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacearmamexcpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacearmamexcpp/</guid>
      <description>arma/mex interface using Matlab C++ API</description>
    </item>
    <item>
      <title>C&amp;E</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/terminology/control-estimation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/terminology/control-estimation/</guid>
      <description>&lt;h1 id=&#34;control--estimation&#34;&gt;&#xA;  Control &amp;amp; Estimation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#control--estimation&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;The control system provided by this library is comprised of a state estimator and a controller. The estimator is responsible for estimating the latent state of the system, given measurements up to and including the current time (i.e., &lt;em&gt;filtering&lt;/em&gt;). At each time step, the controller then uses the resulting state feedback and an internal model of the system to update the inputs to the process being manipulated.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Control Mode Bit Masks</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/modules/group__control__masks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/modules/group__control__masks/</guid>
      <description>provides fill types for constructing new armadillo vectors, matrices</description>
    </item>
    <item>
      <title>Defaults</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/modules/group__defaults/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/modules/group__defaults/</guid>
      <description>&lt;h1 id=&#34;defaults&#34;&gt;&#xA;  Defaults&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#defaults&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;br&gt; &lt;br&gt;&lt;a href=&#34;#detailed-description&#34;&gt;More&amp;hellip;&lt;/a&gt;&#xA;&lt;br&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;attributes&#34;&gt;&#xA;  Attributes&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#attributes&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const data_t&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/modules/group__defaults/#variable-kdefaultp0&#34;&gt;kDefaultP0&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;default state estimate covar&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const data_t&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/modules/group__defaults/#variable-kdefaultq0&#34;&gt;kDefaultQ0&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;default process noise covar&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const data_t&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/modules/group__defaults/#variable-kdefaultr0&#34;&gt;kDefaultR0&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;default output noise covar&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;detailed-description&#34;&gt;&#xA;  Detailed Description&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#detailed-description&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Default values for common variables (e.g., default diagonal elements of covariances)&lt;/p&gt;&#xA;&lt;h2 id=&#34;attribute-details&#34;&gt;&#xA;  Attribute Details&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#attribute-details&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;kdefaultp0&#34;&gt;&#xA;  kDefaultP0&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#kdefaultp0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; data_t kDefaultP0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1e-6&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;kdefaultq0&#34;&gt;&#xA;  kDefaultQ0&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#kdefaultq0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; data_t kDefaultQ0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1e-6&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;kdefaultr0&#34;&gt;&#xA;  kDefaultR0&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#kdefaultr0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; data_t kDefaultR0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1e-2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;p&gt;Updated on 31 March 2025 at 16:31:00 EDT&lt;/p&gt;</description>
    </item>
    <item>
      <title>eg_glds_ctrl.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/examples/eg_glds_ctrl_8cpp-example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/examples/eg_glds_ctrl_8cpp-example/</guid>
      <description>Example GLDS Control.</description>
    </item>
    <item>
      <title>eg_glds_du_plds_ctrl.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/examples/eg_glds_du_plds_ctrl_8cpp-example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/examples/eg_glds_du_plds_ctrl_8cpp-example/</guid>
      <description>Example GLDS Control of PLDS where change in control (du) is being updated, rather than amplitude (u).</description>
    </item>
    <item>
      <title>eg_plds_ctrl.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/examples/eg_plds_ctrl_8cpp-example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/examples/eg_plds_ctrl_8cpp-example/</guid>
      <description>Example PLDS Control.</description>
    </item>
    <item>
      <title>eg_plds_est.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/examples/eg_plds_est_8cpp-example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/examples/eg_plds_est_8cpp-example/</guid>
      <description>Example PLDS Estimation.</description>
    </item>
    <item>
      <title>eg_plds_switched_ctrl.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/examples/eg_plds_switched_ctrl_8cpp-example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/examples/eg_plds_switched_ctrl_8cpp-example/</guid>
      <description>Example Switched PLDS Control.</description>
    </item>
    <item>
      <title>examples</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_d28a4824dc47e487b107a5db32ef43c4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_d28a4824dc47e487b107a5db32ef43c4/</guid>
      <description>&lt;h1 id=&#34;examples&#34;&gt;&#xA;  examples&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#examples&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;files&#34;&gt;&#xA;  Files&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#files&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__ctrl_8cpp/#file-eg-glds-ctrl.cpp&#34;&gt;examples/eg_glds_ctrl.cpp&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__du__plds__ctrl_8cpp/#file-eg-glds-du-plds-ctrl.cpp&#34;&gt;examples/eg_glds_du_plds_ctrl.cpp&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__ctrl_8cpp/#file-eg-plds-ctrl.cpp&#34;&gt;examples/eg_plds_ctrl.cpp&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__est_8cpp/#file-eg-plds-est.cpp&#34;&gt;examples/eg_plds_est.cpp&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__switched__ctrl_8cpp/#file-eg-plds-switched-ctrl.cpp&#34;&gt;examples/eg_plds_switched_ctrl.cpp&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Updated on 31 March 2025 at 16:31:00 EDT&lt;/p&gt;</description>
    </item>
    <item>
      <title>examples/eg_glds_ctrl.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__ctrl_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__ctrl_8cpp/</guid>
      <description>&lt;h1 id=&#34;exampleseg_glds_ctrlcpp&#34;&gt;&#xA;  examples/eg_glds_ctrl.cpp&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#exampleseg_glds_ctrlcpp&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;types&#34;&gt;&#xA;  Types&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#types&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using arma::Mat&amp;lt; data_t &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__ctrl_8cpp/#using-matrix&#34;&gt;Matrix&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using arma::Col&amp;lt; data_t &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__ctrl_8cpp/#using-vector&#34;&gt;Vector&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using double&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__ctrl_8cpp/#using-data-t&#34;&gt;data_t&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;functions&#34;&gt;&#xA;  Functions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#functions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;int&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__ctrl_8cpp/#function-main&#34;&gt;main&lt;/a&gt;&lt;/strong&gt;()&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;type-details&#34;&gt;&#xA;  Type Details&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#type-details&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;matrix&#34;&gt;&#xA;  Matrix&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#matrix&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Matrix &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Mat&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;data_t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;vector&#34;&gt;&#xA;  Vector&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#vector&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Vector &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Col&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;data_t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;data_t&#34;&gt;&#xA;  data_t&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#data_t&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;data_t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Type of all data in library. If need 32b, change &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;float&lt;/code&gt;. This could be potentially useful for large scale problems where there are memory constraints.&lt;/p&gt;</description>
    </item>
    <item>
      <title>examples/eg_glds_du_plds_ctrl.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__du__plds__ctrl_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__du__plds__ctrl_8cpp/</guid>
      <description>&lt;h1 id=&#34;exampleseg_glds_du_plds_ctrlcpp&#34;&gt;&#xA;  examples/eg_glds_du_plds_ctrl.cpp&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#exampleseg_glds_du_plds_ctrlcpp&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;types&#34;&gt;&#xA;  Types&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#types&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using double&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__du__plds__ctrl_8cpp/#using-data-t&#34;&gt;data_t&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using arma::Mat&amp;lt; data_t &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__du__plds__ctrl_8cpp/#using-matrix&#34;&gt;Matrix&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using arma::Col&amp;lt; data_t &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__du__plds__ctrl_8cpp/#using-vector&#34;&gt;Vector&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;functions&#34;&gt;&#xA;  Functions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#functions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;int&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__du__plds__ctrl_8cpp/#function-main&#34;&gt;main&lt;/a&gt;&lt;/strong&gt;()&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;type-details&#34;&gt;&#xA;  Type Details&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#type-details&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;data_t&#34;&gt;&#xA;  data_t&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#data_t&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;data_t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Type of all data in library. If need 32b, change &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;float&lt;/code&gt;. This could be potentially useful for large scale problems where there are memory constraints.&lt;/p&gt;&#xA;&lt;h3 id=&#34;matrix&#34;&gt;&#xA;  Matrix&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#matrix&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Matrix &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Mat&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;data_t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;vector&#34;&gt;&#xA;  Vector&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#vector&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Vector &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Col&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;data_t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;function-details&#34;&gt;&#xA;  Function Details&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#function-details&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;main&#34;&gt;&#xA;  main&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#main&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; main()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Going to simulate a switching disturbance (m) acting on system&lt;/p&gt;</description>
    </item>
    <item>
      <title>examples/eg_plds_ctrl.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__ctrl_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__ctrl_8cpp/</guid>
      <description>&lt;h1 id=&#34;exampleseg_plds_ctrlcpp&#34;&gt;&#xA;  examples/eg_plds_ctrl.cpp&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#exampleseg_plds_ctrlcpp&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;types&#34;&gt;&#xA;  Types&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#types&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using arma::Mat&amp;lt; data_t &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__ctrl_8cpp/#using-matrix&#34;&gt;Matrix&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using arma::Col&amp;lt; data_t &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__ctrl_8cpp/#using-vector&#34;&gt;Vector&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using double&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__ctrl_8cpp/#using-data-t&#34;&gt;data_t&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;functions&#34;&gt;&#xA;  Functions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#functions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;int&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__ctrl_8cpp/#function-main&#34;&gt;main&lt;/a&gt;&lt;/strong&gt;()&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;type-details&#34;&gt;&#xA;  Type Details&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#type-details&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;matrix&#34;&gt;&#xA;  Matrix&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#matrix&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Matrix &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Mat&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;data_t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;vector&#34;&gt;&#xA;  Vector&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#vector&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Vector &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Col&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;data_t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;data_t&#34;&gt;&#xA;  data_t&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#data_t&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;data_t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Type of all data in library. If need 32b, change &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;float&lt;/code&gt;. This could be potentially useful for large scale problems where there are memory constraints.&lt;/p&gt;</description>
    </item>
    <item>
      <title>examples/eg_plds_est.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__est_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__est_8cpp/</guid>
      <description>&lt;h1 id=&#34;exampleseg_plds_estcpp&#34;&gt;&#xA;  examples/eg_plds_est.cpp&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#exampleseg_plds_estcpp&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;types&#34;&gt;&#xA;  Types&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#types&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using arma::Mat&amp;lt; data_t &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__est_8cpp/#using-matrix&#34;&gt;Matrix&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using arma::Col&amp;lt; data_t &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__est_8cpp/#using-vector&#34;&gt;Vector&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using double&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__est_8cpp/#using-data-t&#34;&gt;data_t&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;functions&#34;&gt;&#xA;  Functions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#functions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Matrix&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__est_8cpp/#function-random-walk&#34;&gt;random_walk&lt;/a&gt;&lt;/strong&gt;(size_t n_t, const Matrix &amp;amp; Q, const Vector &amp;amp; x0)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;int&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__est_8cpp/#function-main&#34;&gt;main&lt;/a&gt;&lt;/strong&gt;()&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;type-details&#34;&gt;&#xA;  Type Details&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#type-details&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;matrix&#34;&gt;&#xA;  Matrix&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#matrix&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Matrix &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Mat&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;data_t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;vector&#34;&gt;&#xA;  Vector&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#vector&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Vector &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Col&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;data_t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;data_t&#34;&gt;&#xA;  data_t&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#data_t&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;data_t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Type of all data in library. If need 32b, change &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;float&lt;/code&gt;. This could be potentially useful for large scale problems where there are memory constraints.&lt;/p&gt;</description>
    </item>
    <item>
      <title>examples/eg_plds_switched_ctrl.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__switched__ctrl_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__switched__ctrl_8cpp/</guid>
      <description>&lt;h1 id=&#34;exampleseg_plds_switched_ctrlcpp&#34;&gt;&#xA;  examples/eg_plds_switched_ctrl.cpp&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#exampleseg_plds_switched_ctrlcpp&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;types&#34;&gt;&#xA;  Types&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#types&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using double&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__switched__ctrl_8cpp/#using-data-t&#34;&gt;data_t&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using arma::Mat&amp;lt; data_t &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__switched__ctrl_8cpp/#using-matrix&#34;&gt;Matrix&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using arma::Col&amp;lt; data_t &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__switched__ctrl_8cpp/#using-vector&#34;&gt;Vector&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;functions&#34;&gt;&#xA;  Functions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#functions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;int&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__switched__ctrl_8cpp/#function-main&#34;&gt;main&lt;/a&gt;&lt;/strong&gt;()&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;type-details&#34;&gt;&#xA;  Type Details&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#type-details&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;data_t&#34;&gt;&#xA;  data_t&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#data_t&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;data_t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Type of all data in library. If need 32b, change &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;float&lt;/code&gt;. This could be potentially useful for large scale problems where there are memory constraints.&lt;/p&gt;&#xA;&lt;h3 id=&#34;matrix&#34;&gt;&#xA;  Matrix&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#matrix&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Matrix &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Mat&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;data_t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;vector&#34;&gt;&#xA;  Vector&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#vector&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Vector &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Col&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;data_t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;function-details&#34;&gt;&#xA;  Function Details&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#function-details&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;main&#34;&gt;&#xA;  main&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#main&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; main()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;source-code&#34;&gt;&#xA;  Source code&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#source-code&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//===-- eg_plds_switched_ctrl.cpp - Example Switched PLDS Control ---===//&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Copyright 2021 Michael Bolus&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Copyright 2021 Georgia Institute of Technology&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Licensed under the Apache License, Version 2.0 (the &amp;#34;License&amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// you may not use this file except in compliance with the License.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// You may obtain a copy of the License at&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//     http://www.apache.org/licenses/LICENSE-2.0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Unless required by applicable law or agreed to in writing, software&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// distributed under the License is distributed on an &amp;#34;AS IS&amp;#34; BASIS,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// See the License for the specific language governing permissions and&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// limitations under the License.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//===----------------------------------------------------------------------===//&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//===----------------------------------------------------------------------===//&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;ldsCtrlEst&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;data_t;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Matrix;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Vector;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;cout;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; ********** Example Switched Poisson LDS Control ********** &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// whether to do switched control&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; do_switch_ctrl &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// Make SISO system sampled at 1kHz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  data_t dt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1e-3&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  size_t n_u &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  size_t n_x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  size_t n_y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// no time steps for simulation.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt; n_t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static_cast&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;size_t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;30.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; dt);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// for simulating switching&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  size_t which_mode &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  data_t pr_21 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1e-3&lt;/span&gt;;   &lt;span style=&#34;color:#75715e&#34;&gt;// prob mode 1 -&amp;gt; 2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  data_t pr_12 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pr_21;  &lt;span style=&#34;color:#75715e&#34;&gt;// prob mode 2 -&amp;gt; 1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// simulated system being controlled&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;poisson&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;System controlled_system(n_u, n_x, n_y, dt);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// **Assume the system is not well characterized by one LDS, but is well&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// characterized by two LDS models with different input matrices.**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  data_t scale_sys_b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Matrix a(n_x, n_x, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;eye);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  a[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.985&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Matrix b1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Matrix(n_x, n_u).fill(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.05&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Vector d &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Vector(n_y, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;zeros).fill(log(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; dt));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  controlled_system.set_A(a);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  controlled_system.set_B(b1);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  controlled_system.set_d(d);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  controlled_system.Reset();  &lt;span style=&#34;color:#75715e&#34;&gt;// reset to initial conditions&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// reference&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Vector y_ref0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Vector(n_y, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;zeros).fill(&lt;span style=&#34;color:#ae81ff&#34;&gt;25.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; dt);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// Let underlying system 1 be more sensitive than system 2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Matrix b2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Matrix(n_x, n_u).fill(b1[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; scale_sys_b);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// create switched controller&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;poisson&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;SwitchedController switched_controller;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;UniformMatrixList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; k_x;  &lt;span style=&#34;color:#75715e&#34;&gt;// feedback controller gains&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// create switched controller sub-systems&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// system 1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;poisson&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;System sys1(controlled_system);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// set process noise covariance&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    Matrix q_controller &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Matrix(n_x, n_x, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;eye) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5e-3&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sys1.set_Q(q_controller);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// adaptively estimate process disturbance (m)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// n.b. using arbitrary default value for process noise if enabled.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    sys1.do_adapt_m &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// setting initial mode to target to avoid large error at onset:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    Vector x0_controller &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;log(y_ref0) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; d;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sys1.set_x0(x0_controller);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sys1.Reset();  &lt;span style=&#34;color:#75715e&#34;&gt;// reset to initial conditions&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.....................................&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sys1:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.....................................&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sys1.Print();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.....................................&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// system 2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;poisson&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;System sys2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sys1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// set parameters&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    sys2.set_B(b2);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.....................................&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sys2:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.....................................&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sys2.Print();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.....................................&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;UniformSystemList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;poisson&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;System&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; systems({sys1, sys2});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// controller gains for underlying system s:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    Matrix k_x1(n_u, n_x, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;ones);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Matrix k_x2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; scale_sys_b &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; k_x1;  &lt;span style=&#34;color:#75715e&#34;&gt;// system2 is x-times less sensitive.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    k_x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;UniformMatrixList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;({k_x1, k_x2});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    data_t u_lb &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    data_t u_ub &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5.0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    switched_controller &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;move(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;poisson&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;SwitchedController(std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;move(systems), u_lb, u_ub));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// Control variables&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  size_t control_type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;  &lt;span style=&#34;color:#75715e&#34;&gt;// no integral action, etc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  switched_controller.set_control_type(control_type);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  switched_controller.set_Kc(std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;move(k_x));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  switched_controller.set_y_ref(y_ref0);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;poisson&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;System&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; systems_vec(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;poisson&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;System());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;UniformSystemList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;poisson&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;System&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; systems(std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;move(systems_vec));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.....................................&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;switched_controller:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.....................................&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  switched_controller.Print();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.....................................&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// Fake measurements&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Matrix z(n_y, n_t, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;zeros);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// Will later contain control.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Matrix u(n_u, n_t, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;zeros);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// create Matrix to save outputs in...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Matrix y_hat(n_y, n_t, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;zeros);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Matrix y_true(n_y, n_t, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;zeros);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Matrix y_ref &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Matrix(n_y, n_t).fill(y_ref0[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// modes and gain/disturbance params&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Matrix x_hat(n_x, n_t, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;zeros);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Matrix x_true(n_x, n_t, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;zeros);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Matrix mode(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, n_t, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;ones);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// set initial val&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  y_hat.col(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; switched_controller.sys().y();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  y_true.col(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; controlled_system.y();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  x_hat.col(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; switched_controller.sys().x();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  x_true.col(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; controlled_system.x();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Starting &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; n_t &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; dt &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; sec simulation ... &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt; start &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;chrono&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;high_resolution_clock&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;now();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (size_t t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; t &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; n_t; t&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Let the controlled system stochastically change gain&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Assume another algorithm decodes this mode change and signals the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// switched_controller&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    Vector chance(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;randu);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (which_mode &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;// mode1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (chance[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; pr_21) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        which_mode &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        controlled_system.set_B(b2);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (do_switch_ctrl) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          switched_controller.Switch(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {  &lt;span style=&#34;color:#75715e&#34;&gt;// mode2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (chance[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; pr_12) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        which_mode &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        controlled_system.set_B(b1);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (do_switch_ctrl) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          switched_controller.Switch(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Simulate the true system.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    z.col(t) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; controlled_system.Simulate(u.col(t &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// perform control&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    u.col(t) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; switched_controller.ControlOutputReference(z.col(t));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    mode.col(t) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; which_mode;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    y_ref.col(t) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; y_ref0;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    y_true.col(t) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; controlled_system.y();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x_true.col(t) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; controlled_system.x();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    y_hat.col(t) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; switched_controller.sys().y();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x_hat.col(t) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; switched_controller.sys().x();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt; finish &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;chrono&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;high_resolution_clock&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;now();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;chrono&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;duration&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;data_t, std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;milli&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; sim_time_ms &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; finish &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; start;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Finished simulation in &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; sim_time_ms.count() &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; ms.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(app. &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (sim_time_ms.count() &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; n_t) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1e3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; us/time-step)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// saved variables: dt, y_hat, x_hat, m_hat, z, u, y_ref, y_true,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// x_true, m_true saving with hdf5 via armadillo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hdf5_opts&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;opts replace &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hdf5_opts&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;replace;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt; dt_vec &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Vector(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;).fill(dt);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  dt_vec.save(arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hdf5_name(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eg_plds_switched_ctrl.h5&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dt&amp;#34;&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  y_ref.save(arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hdf5_name(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eg_plds_switched_ctrl.h5&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y_ref&amp;#34;&lt;/span&gt;, replace));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  u.save(arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hdf5_name(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eg_plds_switched_ctrl.h5&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;u&amp;#34;&lt;/span&gt;, replace));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  z.save(arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hdf5_name(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eg_plds_switched_ctrl.h5&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;z&amp;#34;&lt;/span&gt;, replace));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  x_true.save(arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hdf5_name(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eg_plds_switched_ctrl.h5&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x_true&amp;#34;&lt;/span&gt;, replace));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  y_true.save(arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hdf5_name(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eg_plds_switched_ctrl.h5&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y_true&amp;#34;&lt;/span&gt;, replace));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  x_hat.save(arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hdf5_name(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eg_plds_switched_ctrl.h5&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x_hat&amp;#34;&lt;/span&gt;, replace));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  y_hat.save(arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hdf5_name(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eg_plds_switched_ctrl.h5&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y_hat&amp;#34;&lt;/span&gt;, replace));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  mode.save(arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hdf5_name(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eg_plds_switched_ctrl.h5&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mode&amp;#34;&lt;/span&gt;, replace));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;p&gt;Updated on 31 March 2025 at 16:31:00 EDT&lt;/p&gt;</description>
    </item>
    <item>
      <title>GLDS Control</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/tutorials/eg_glds_control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/tutorials/eg_glds_control/</guid>
      <description>&lt;h1 id=&#34;glds-control-tutorial&#34;&gt;&#xA;  GLDS Control Tutorial&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#glds-control-tutorial&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;This tutorial shows how to use this library to control a system with a Gaussian LDS controller (&lt;code&gt;lds::gaussian::Controller&lt;/code&gt;). In place of a physical system, a GLDS model (&lt;code&gt;lds::gaussian::System&lt;/code&gt;) receives control inputs and simulates measurements for the feedback control loop. The controller is assumed to have an imperfect model of the system being controlled (here, a gain mismatch), and there is a stochastic, unmeasured disturbance acting on the system. A combination of integral action and adaptive estimation of this process disturbance is used to perform control.&lt;/p&gt;</description>
    </item>
    <item>
      <title>include</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_d44c64559bbebec7f509842c48db8b23/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_d44c64559bbebec7f509842c48db8b23/</guid>
      <description>&lt;h1 id=&#34;include&#34;&gt;&#xA;  include&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#include&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;directories&#34;&gt;&#xA;  Directories&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#directories&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_156a98879751e549d6939ca71a62d61f/#dir-ldsctrlest-h&#34;&gt;ldsCtrlEst_h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Updated on 31 March 2025 at 16:31:00 EDT&lt;/p&gt;</description>
    </item>
    <item>
      <title>lds</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/</guid>
      <description>Linear Dynamical Systems (LDS) namespace.</description>
    </item>
    <item>
      <title>lds::Controller</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/</guid>
      <description>&lt;h1 id=&#34;ldscontroller&#34;&gt;&#xA;  lds::Controller&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ldscontroller&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;#detailed-description&#34;&gt;More&amp;hellip;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Inherited by &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_switched_controller/&#34;&gt;lds::SwitchedController&amp;lt; System &amp;gt;&lt;/a&gt;, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1_controller/&#34;&gt;lds::gaussian::Controller&lt;/a&gt;, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1_controller/&#34;&gt;lds::poisson::Controller&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;public-functions&#34;&gt;&#xA;  Public Functions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#public-functions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-controller&#34;&gt;Controller&lt;/a&gt;&lt;/strong&gt;() =default&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/&#34;&gt;Controller&lt;/a&gt;.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-controller&#34;&gt;Controller&lt;/a&gt;&lt;/strong&gt;(const &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_system/&#34;&gt;System&lt;/a&gt; &amp;amp; sys, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt; u_lb, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt; u_ub, size_t control_type =0)&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/&#34;&gt;Controller&lt;/a&gt;.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-controller&#34;&gt;Controller&lt;/a&gt;&lt;/strong&gt;(&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_system/&#34;&gt;System&lt;/a&gt; &amp;amp;&amp;amp; sys, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt; u_lb, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt; u_ub, size_t control_type =0)&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/&#34;&gt;Controller&lt;/a&gt; by moving the system object.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const Vector &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-control&#34;&gt;Control&lt;/a&gt;&lt;/strong&gt;(const Vector &amp;amp; z, bool do_control =true, bool do_lock_control =false, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt; sigma_soft_start =0, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt; sigma_u_noise =0, bool do_reset_at_control_onset =true)&lt;br&gt;updates control signal (single-step)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const Vector &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-controloutputreference&#34;&gt;ControlOutputReference&lt;/a&gt;&lt;/strong&gt;(const Vector &amp;amp; z, bool do_control =true, bool do_estimation =true, bool do_lock_control =false, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt; sigma_soft_start =0, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt; sigma_u_noise =0, bool do_reset_at_control_onset =true)&lt;br&gt;updates control signal, given previously-set (single-step)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_system/&#34;&gt;System&lt;/a&gt; &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-sys&#34;&gt;sys&lt;/a&gt;&lt;/strong&gt;() const&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const Matrix &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-kc&#34;&gt;Kc&lt;/a&gt;&lt;/strong&gt;() const&lt;br&gt;Get state feedback controller gain.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const Matrix &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-kc-inty&#34;&gt;Kc_inty&lt;/a&gt;&lt;/strong&gt;() const&lt;br&gt;Get integral controller gain.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const Matrix &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-kc-u&#34;&gt;Kc_u&lt;/a&gt;&lt;/strong&gt;() const&lt;br&gt;Get input feedback controller gain.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const Vector &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-g-design&#34;&gt;g_design&lt;/a&gt;&lt;/strong&gt;() const&lt;br&gt;Get input gain used in controller design.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const Vector &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-u-ref&#34;&gt;u_ref&lt;/a&gt;&lt;/strong&gt;() const&lt;br&gt;Get reference input.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const Vector &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-x-ref&#34;&gt;x_ref&lt;/a&gt;&lt;/strong&gt;() const&lt;br&gt;Get reference state.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const Vector &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-y-ref&#34;&gt;y_ref&lt;/a&gt;&lt;/strong&gt;() const&lt;br&gt;Get reference output.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;size_t&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-control-type&#34;&gt;control_type&lt;/a&gt;&lt;/strong&gt;() const&lt;br&gt;Get controller type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-tau-awu&#34;&gt;tau_awu&lt;/a&gt;&lt;/strong&gt;() const&lt;br&gt;Get time constant of anti-integral-windup.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-u-lb&#34;&gt;u_lb&lt;/a&gt;&lt;/strong&gt;() const&lt;br&gt;Get control lower bound.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-u-ub&#34;&gt;u_ub&lt;/a&gt;&lt;/strong&gt;() const&lt;br&gt;Get control upper bound.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-set-sys&#34;&gt;set_sys&lt;/a&gt;&lt;/strong&gt;(const &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_system/&#34;&gt;System&lt;/a&gt; &amp;amp; sys)&lt;br&gt;Set system.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-set-g-design&#34;&gt;set_g_design&lt;/a&gt;&lt;/strong&gt;(const Vector &amp;amp; g_design)&lt;br&gt;Set input gain used in controller design (g_design)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-set-u-ref&#34;&gt;set_u_ref&lt;/a&gt;&lt;/strong&gt;(const Vector &amp;amp; u_ref)&lt;br&gt;Set reference input (u_ref)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-set-x-ref&#34;&gt;set_x_ref&lt;/a&gt;&lt;/strong&gt;(const Vector &amp;amp; x_ref)&lt;br&gt;Set reference state (x_ref)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;virtual void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-set-y-ref&#34;&gt;set_y_ref&lt;/a&gt;&lt;/strong&gt;(const Vector &amp;amp; y_ref)&lt;br&gt;Set reference output (y_ref)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-set-kc&#34;&gt;set_Kc&lt;/a&gt;&lt;/strong&gt;(const Matrix &amp;amp; Kc)&lt;br&gt;Set state controller gain.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-set-kc-inty&#34;&gt;set_Kc_inty&lt;/a&gt;&lt;/strong&gt;(const Matrix &amp;amp; Kc_inty)&lt;br&gt;Set integral controller gain.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-set-kc-u&#34;&gt;set_Kc_u&lt;/a&gt;&lt;/strong&gt;(const Matrix &amp;amp; Kc_u)&lt;br&gt;Set input controller gain.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-set-tau-awu&#34;&gt;set_tau_awu&lt;/a&gt;&lt;/strong&gt;(&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt; tau)&lt;br&gt;Set time constant of anti-integral-windup.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-set-control-type&#34;&gt;set_control_type&lt;/a&gt;&lt;/strong&gt;(size_t control_type)&lt;br&gt;Sets the control type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-set-u-lb&#34;&gt;set_u_lb&lt;/a&gt;&lt;/strong&gt;(&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt; u_lb)&lt;br&gt;sets control lower bound&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-set-u-ub&#34;&gt;set_u_ub&lt;/a&gt;&lt;/strong&gt;(&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt; u_ub)&lt;br&gt;Sets control upper bound.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-reset&#34;&gt;Reset&lt;/a&gt;&lt;/strong&gt;()&lt;br&gt;reset system and control variables.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#function-print&#34;&gt;Print&lt;/a&gt;&lt;/strong&gt;()&lt;br&gt;prints variables to stdout&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;protected-attributes&#34;&gt;&#xA;  Protected Attributes&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#protected-attributes&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_system/&#34;&gt;System&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-sys-&#34;&gt;sys_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;underlying LDS&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Vector&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-u-&#34;&gt;u_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;control signal&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Vector&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-u-return-&#34;&gt;u_return_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;control signal that is &lt;em&gt;returned&lt;/em&gt; to user&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Vector&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-g-design-&#34;&gt;g_design_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;input gain of the system used for controller design&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Vector&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-u-ref-&#34;&gt;u_ref_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;reference input&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Vector&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-u-ref-prev-&#34;&gt;u_ref_prev_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;reference input at previous time step&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Vector&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-x-ref-&#34;&gt;x_ref_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;reference state&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Vector&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-y-ref-&#34;&gt;y_ref_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;reference output&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Vector&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-cx-ref-&#34;&gt;cx_ref_&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Matrix&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-kc-&#34;&gt;Kc_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;state controller gain&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Matrix&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-kc-u-&#34;&gt;Kc_u_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;input controller gain (optional when control updates \deltaU)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Matrix&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-kc-inty-&#34;&gt;Kc_inty_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;integral controller gain&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Vector&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-du-ref-&#34;&gt;du_ref_&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Vector&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-dv-ref-&#34;&gt;dv_ref_&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Vector&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-v-ref-&#34;&gt;v_ref_&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Vector&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-dv-&#34;&gt;dv_&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Vector&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-v-&#34;&gt;v_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;Control after g inversion (e.g., control in physical units)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Vector&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-int-e-&#34;&gt;int_e_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;integrated error&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Vector&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-int-e-awu-adjust-&#34;&gt;int_e_awu_adjust_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;anti-windup adjustment to intE&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Vector&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-u-sat-&#34;&gt;u_sat_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;control signal after saturation (for antiWindup)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;bool&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-do-control-prev-&#34;&gt;do_control_prev_&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;bool&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-do-lock-control-prev-&#34;&gt;do_lock_control_prev_&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;bool&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-u-saturated-&#34;&gt;u_saturated_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;whether control signal has reached saturation limits&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-u-lb-&#34;&gt;u_lb_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;lower bound on control&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-u-ub-&#34;&gt;u_ub_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;upper bound on control&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-tau-awu-&#34;&gt;tau_awu_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;antiwindup time constant&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-k-awu-&#34;&gt;k_awu_&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-t-since-control-onset-&#34;&gt;t_since_control_onset_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;time since control epoch onset&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;size_t&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_controller/#variable-control-type-&#34;&gt;control_type_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;controller type&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;detailed-description&#34;&gt;&#xA;  Detailed Description&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#detailed-description&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typename&lt;/span&gt; System &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lds&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Controller;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;public-function-details&#34;&gt;&#xA;  Public Function Details&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#public-function-details&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;controller&#34;&gt;&#xA;  &lt;strong&gt;Controller&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#controller&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Controller() &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h3 id=&#34;controller-1&#34;&gt;&#xA;  &lt;strong&gt;Controller&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#controller-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;inline&lt;/span&gt; Controller(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; System &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; sys,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    data_t u_lb,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    data_t u_ub,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    size_t control_type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Parameters&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>lds::EM</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/</guid>
      <description>&lt;h1 id=&#34;ldsem&#34;&gt;&#xA;  lds::EM&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ldsem&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;#detailed-description&#34;&gt;More&amp;hellip;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Inherited by &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1_fit_e_m/&#34;&gt;lds::gaussian::FitEM&lt;/a&gt;, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1_fit_e_m/&#34;&gt;lds::poisson::FitEM&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;public-functions&#34;&gt;&#xA;  Public Functions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#public-functions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-em&#34;&gt;EM&lt;/a&gt;&lt;/strong&gt;() =default&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/&#34;&gt;EM&lt;/a&gt;&lt;a href=&#34;&#34;&gt;Fit&lt;/a&gt; type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-em&#34;&gt;EM&lt;/a&gt;&lt;/strong&gt;(size_t n_x, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt; dt, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt;&amp;lt; &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#enumvalue-kmatfreedim2&#34;&gt;kMatFreeDim2&lt;/a&gt; &amp;gt; &amp;amp;&amp;amp; u_train, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt;&amp;lt; &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#enumvalue-kmatfreedim2&#34;&gt;kMatFreeDim2&lt;/a&gt; &amp;gt; &amp;amp;&amp;amp; z_train)&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/&#34;&gt;EM&lt;/a&gt;&lt;a href=&#34;&#34;&gt;Fit&lt;/a&gt; type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-em&#34;&gt;EM&lt;/a&gt;&lt;/strong&gt;(const &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_fit/&#34;&gt;Fit&lt;/a&gt; &amp;amp; fit0, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt;&amp;lt; &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#enumvalue-kmatfreedim2&#34;&gt;kMatFreeDim2&lt;/a&gt; &amp;gt; &amp;amp;&amp;amp; u_train, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt;&amp;lt; &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#enumvalue-kmatfreedim2&#34;&gt;kMatFreeDim2&lt;/a&gt; &amp;gt; &amp;amp;&amp;amp; z_train)&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/&#34;&gt;EM&lt;/a&gt;&lt;a href=&#34;&#34;&gt;Fit&lt;/a&gt; type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;virtual&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-~em&#34;&gt;~EM&lt;/a&gt;&lt;/strong&gt;() =default&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_fit/&#34;&gt;Fit&lt;/a&gt; &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-run&#34;&gt;Run&lt;/a&gt;&lt;/strong&gt;(bool calc_dynamics =true, bool calc_Q =true, bool calc_init =true, bool calc_output =true, bool calc_measurement =true, size_t max_iter =100, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt; tol =1e-2)&lt;br&gt;Runs fitting by Expectation(E)-Maximization(M)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;std::tuple&amp;lt; &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt;&amp;lt; &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#enumvalue-kmatfreedim2&#34;&gt;kMatFreeDim2&lt;/a&gt; &amp;gt;, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt;&amp;lt; &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#enumvalue-kmatfreedim2&#34;&gt;kMatFreeDim2&lt;/a&gt; &amp;gt; &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-returndata&#34;&gt;ReturnData&lt;/a&gt;&lt;/strong&gt;()&lt;br&gt;Returns the input/output data to caller.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const std::vector&amp;lt; Matrix &amp;gt; &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-x&#34;&gt;x&lt;/a&gt;&lt;/strong&gt;() const&lt;br&gt;gets estimated state (over time)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const std::vector&amp;lt; Matrix &amp;gt; &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-y&#34;&gt;y&lt;/a&gt;&lt;/strong&gt;() const&lt;br&gt;gets estimated output (over time)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const Matrix &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-sum-e-x-t-x-t&#34;&gt;sum_E_x_t_x_t&lt;/a&gt;&lt;/strong&gt;() const&lt;br&gt;gets state-input covariance&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const Matrix &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-sum-e-xu-tm1-xu-tm1&#34;&gt;sum_E_xu_tm1_xu_tm1&lt;/a&gt;&lt;/strong&gt;() const&lt;br&gt;gets state-input covariance (t-minus-1)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const Matrix &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-sum-e-xu-t-xu-tm1&#34;&gt;sum_E_xu_t_xu_tm1&lt;/a&gt;&lt;/strong&gt;() const&lt;br&gt;gets single lag state-input covariance&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;size_t&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-n-t-tot&#34;&gt;n_t_tot&lt;/a&gt;&lt;/strong&gt;()&lt;br&gt;total number of time samples&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const Vector &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-theta&#34;&gt;theta&lt;/a&gt;&lt;/strong&gt;() const&lt;br&gt;gets parameters updated in M step&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;protected-functions&#34;&gt;&#xA;  Protected Functions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#protected-functions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-expectation&#34;&gt;Expectation&lt;/a&gt;&lt;/strong&gt;(bool force_common_initial =false)&lt;br&gt;Expectation step.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-maximization&#34;&gt;Maximization&lt;/a&gt;&lt;/strong&gt;(bool calc_dynamics =true, bool calc_Q =true, bool calc_init =false, bool calc_output =false, bool calc_measurement =false)&lt;br&gt;Maximization step.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-maximizedynamics&#34;&gt;MaximizeDynamics&lt;/a&gt;&lt;/strong&gt;()&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-maximizeq&#34;&gt;MaximizeQ&lt;/a&gt;&lt;/strong&gt;()&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-maximizeinitial&#34;&gt;MaximizeInitial&lt;/a&gt;&lt;/strong&gt;()&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;virtual void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-maximizeoutput&#34;&gt;MaximizeOutput&lt;/a&gt;&lt;/strong&gt;() =0&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;virtual void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-maximizemeasurement&#34;&gt;MaximizeMeasurement&lt;/a&gt;&lt;/strong&gt;() =0&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-smooth&#34;&gt;Smooth&lt;/a&gt;&lt;/strong&gt;(bool force_common_initial)&lt;br&gt;get smoothed estimates&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;virtual void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-recurseke&#34;&gt;RecurseKe&lt;/a&gt;&lt;/strong&gt;(Matrix &amp;amp; Ke, Cube &amp;amp; P_pre, Cube &amp;amp; P_post, size_t t) =0&lt;br&gt;recursively update estimator gain Ke&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-reset&#34;&gt;Reset&lt;/a&gt;&lt;/strong&gt;()&lt;br&gt;reset to initial conditions&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-initvars&#34;&gt;InitVars&lt;/a&gt;&lt;/strong&gt;()&lt;br&gt;Initializes the variables.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Vector&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#function-updatetheta&#34;&gt;UpdateTheta&lt;/a&gt;&lt;/strong&gt;()&lt;br&gt;updates parameter list, theta&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;protected-attributes&#34;&gt;&#xA;  Protected Attributes&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#protected-attributes&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt;&amp;lt; &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#enumvalue-kmatfreedim2&#34;&gt;kMatFreeDim2&lt;/a&gt; &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#variable-u-&#34;&gt;u_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;input training data&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt;&amp;lt; &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#enumvalue-kmatfreedim2&#34;&gt;kMatFreeDim2&lt;/a&gt; &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#variable-z-&#34;&gt;z_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;measurement training data&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;std::vector&amp;lt; Matrix &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#variable-x-&#34;&gt;x_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;state estimate&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;std::vector&amp;lt; Cube &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#variable-p-&#34;&gt;P_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;state estimate cov&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;std::vector&amp;lt; Cube &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#variable-p-t-tm1-&#34;&gt;P_t_tm1_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;single-lag state covariance&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;std::vector&amp;lt; Matrix &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#variable-y-&#34;&gt;y_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;output estimate&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Matrix&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#variable-diag-y-&#34;&gt;diag_y_&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Matrix&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#variable-sum-e-x-t-x-t-&#34;&gt;sum_E_x_t_x_t_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;state covariance (current time)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Matrix&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#variable-sum-e-xu-tm1-xu-tm1-&#34;&gt;sum_E_xu_tm1_xu_tm1_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;state-input covariance (t-minus-1)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Matrix&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#variable-sum-e-xu-t-xu-tm1-&#34;&gt;sum_E_xu_t_xu_tm1_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;single lag state-input covariance&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_fit/&#34;&gt;Fit&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#variable-fit-&#34;&gt;fit_&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Vector&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#variable-theta-&#34;&gt;theta_&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#variable-dt-&#34;&gt;dt_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;sample period&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;size_t&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#variable-n-u-&#34;&gt;n_u_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;number of inputs&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;size_t&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#variable-n-x-&#34;&gt;n_x_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;number of states&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;size_t&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#variable-n-y-&#34;&gt;n_y_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;number of outputs&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;size_t&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#variable-n-trials-&#34;&gt;n_trials_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;number of input/output data sequences&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;std::vector&amp;lt; size_t &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#variable-n-t-&#34;&gt;n_t_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;number of time steps&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;size_t&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_e_m/#variable-n-t-tot-&#34;&gt;n_t_tot_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;total number of time steps across trials&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;detailed-description&#34;&gt;&#xA;  Detailed Description&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#detailed-description&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typename&lt;/span&gt; Fit &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lds&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;EM;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;public-function-details&#34;&gt;&#xA;  Public Function Details&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#public-function-details&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;em&#34;&gt;&#xA;  &lt;strong&gt;EM&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#em&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;EM() &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h3 id=&#34;em-1&#34;&gt;&#xA;  &lt;strong&gt;EM&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#em-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;EM(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    size_t n_x,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    data_t dt,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    UniformMatrixList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; kMatFreeDim2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; u_train,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    UniformMatrixList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; kMatFreeDim2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; z_train&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Parameters&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>lds::Fit</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_fit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_fit/</guid>
      <description>LDS Fit Type.</description>
    </item>
    <item>
      <title>lds::gaussian</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds_1_1gaussian/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds_1_1gaussian/</guid>
      <description>Linear Dynamical Systems with Gaussian observations.</description>
    </item>
    <item>
      <title>lds::gaussian::Controller</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1_controller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1_controller/</guid>
      <description>Gaussian-observation Controller Type.</description>
    </item>
    <item>
      <title>lds::gaussian::Fit</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1_fit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1_fit/</guid>
      <description>GLDS Fit Type.</description>
    </item>
    <item>
      <title>lds::gaussian::FitEM</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1_fit_e_m/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1_fit_e_m/</guid>
      <description>GLDS E-M Fit Type.</description>
    </item>
    <item>
      <title>lds::gaussian::FitSSID</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1_fit_s_s_i_d/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1_fit_s_s_i_d/</guid>
      <description>Subspace Identification (SSID) for GLDS.</description>
    </item>
    <item>
      <title>lds::gaussian::SwitchedController</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1_switched_controller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1_switched_controller/</guid>
      <description>Gaussian-observation SwitchedController Type.</description>
    </item>
    <item>
      <title>lds::gaussian::System</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1_system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1_system/</guid>
      <description>Gaussian LDS Type.</description>
    </item>
    <item>
      <title>lds::poisson</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds_1_1poisson/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds_1_1poisson/</guid>
      <description>Linear Dynamical Systems with Poisson observations.</description>
    </item>
    <item>
      <title>lds::poisson::Controller</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1_controller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1_controller/</guid>
      <description>PLDS Controller Type.</description>
    </item>
    <item>
      <title>lds::poisson::Fit</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1_fit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1_fit/</guid>
      <description>PLDS Fit Type.</description>
    </item>
    <item>
      <title>lds::poisson::FitEM</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1_fit_e_m/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1_fit_e_m/</guid>
      <description>PLDS E-M Fit Type.</description>
    </item>
    <item>
      <title>lds::poisson::FitSSID</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1_fit_s_s_i_d/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1_fit_s_s_i_d/</guid>
      <description>Subspace Identification (SSID) for PLDS.</description>
    </item>
    <item>
      <title>lds::poisson::SwitchedController</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1_switched_controller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1_switched_controller/</guid>
      <description>Poisson-observation SwitchedController Type.</description>
    </item>
    <item>
      <title>lds::poisson::System</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1_system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1_system/</guid>
      <description>Poisson System type.</description>
    </item>
    <item>
      <title>lds::SSID</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/</guid>
      <description>&lt;h1 id=&#34;ldsssid&#34;&gt;&#xA;  lds::SSID&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ldsssid&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;#detailed-description&#34;&gt;More&amp;hellip;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Inherited by &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1gaussian_1_1_fit_s_s_i_d/&#34;&gt;lds::gaussian::FitSSID&lt;/a&gt;, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1poisson_1_1_fit_s_s_i_d/&#34;&gt;lds::poisson::FitSSID&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;public-functions&#34;&gt;&#xA;  Public Functions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#public-functions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#function-ssid&#34;&gt;SSID&lt;/a&gt;&lt;/strong&gt;() =default&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/&#34;&gt;SSID&lt;/a&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_fit/&#34;&gt;Fit&lt;/a&gt; type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#function-ssid&#34;&gt;SSID&lt;/a&gt;&lt;/strong&gt;(size_t n_x, size_t n_h, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt; dt, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt;&amp;lt; &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#enumvalue-kmatfreedim2&#34;&gt;kMatFreeDim2&lt;/a&gt; &amp;gt; &amp;amp;&amp;amp; u_train, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt;&amp;lt; &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#enumvalue-kmatfreedim2&#34;&gt;kMatFreeDim2&lt;/a&gt; &amp;gt; &amp;amp;&amp;amp; z_train, const Vector &amp;amp; d =Vector(1).fill(-kInf))&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/&#34;&gt;SSID&lt;/a&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_fit/&#34;&gt;Fit&lt;/a&gt; type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;std::tuple&amp;lt; &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_fit/&#34;&gt;Fit&lt;/a&gt;, Vector &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#function-run&#34;&gt;Run&lt;/a&gt;&lt;/strong&gt;(&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#enum-ssidwt&#34;&gt;SSIDWt&lt;/a&gt; ssid_wt)&lt;br&gt;Runs fitting by subspace identification (&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/&#34;&gt;SSID&lt;/a&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;std::tuple&amp;lt; &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt;&amp;lt; &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#enumvalue-kmatfreedim2&#34;&gt;kMatFreeDim2&lt;/a&gt; &amp;gt;, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt;&amp;lt; &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#enumvalue-kmatfreedim2&#34;&gt;kMatFreeDim2&lt;/a&gt; &amp;gt; &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#function-returndata&#34;&gt;ReturnData&lt;/a&gt;&lt;/strong&gt;()&lt;br&gt;Returns the I/O data to caller.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;protected-functions&#34;&gt;&#xA;  Protected Functions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#protected-functions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#function-calcd&#34;&gt;CalcD&lt;/a&gt;&lt;/strong&gt;(&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt; t_silence =0.1, &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt; thresh_silence =0.001)&lt;br&gt;Using periods of silence in inputs (u), calculates the output \ bias (d)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#function-createhankeldatamat&#34;&gt;CreateHankelDataMat&lt;/a&gt;&lt;/strong&gt;()&lt;br&gt;Creates the block-hankel I/O data matrix.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;virtual void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#function-decomposedata&#34;&gt;DecomposeData&lt;/a&gt;&lt;/strong&gt;() =0&lt;br&gt;Decompose data to lower-triangular matrix (used in Solve)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#function-calcsvd&#34;&gt;CalcSVD&lt;/a&gt;&lt;/strong&gt;(&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#enum-ssidwt&#34;&gt;SSIDWt&lt;/a&gt; wt)&lt;br&gt;performs the singular value decomposition (SVD)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#function-solve&#34;&gt;Solve&lt;/a&gt;&lt;/strong&gt;(&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt; wt_dc)&lt;br&gt;solves for LDS parameters&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#function-recomputeextobs&#34;&gt;RecomputeExtObs&lt;/a&gt;&lt;/strong&gt;()&lt;br&gt;recompute extended observability matrix from estimates of A, C&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;protected-attributes&#34;&gt;&#xA;  Protected Attributes&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#protected-attributes&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt;&amp;lt; &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#enumvalue-kmatfreedim2&#34;&gt;kMatFreeDim2&lt;/a&gt; &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#variable-u-&#34;&gt;u_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;input training data&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt;&amp;lt; &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#enumvalue-kmatfreedim2&#34;&gt;kMatFreeDim2&lt;/a&gt; &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#variable-z-&#34;&gt;z_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;measurement training data&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Matrix&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#variable-d-&#34;&gt;D_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;block-Hankel I/O data matrix&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_fit/&#34;&gt;Fit&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#variable-fit-&#34;&gt;fit_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;fit&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Matrix&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#variable-g-dc-&#34;&gt;g_dc_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;I/O gain @ DC.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacelds/#using-data-t&#34;&gt;data_t&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#variable-dt-&#34;&gt;dt_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;sample period&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;size_t&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#variable-n-u-&#34;&gt;n_u_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;number of inputs&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;size_t&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#variable-n-x-&#34;&gt;n_x_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;number of states&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;size_t&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#variable-n-y-&#34;&gt;n_y_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;number of outputs&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;size_t&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#variable-n-h-&#34;&gt;n_h_&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;size_t&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#variable-n-trials-&#34;&gt;n_trials_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;number of input/output data sequences&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;std::vector&amp;lt; size_t &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#variable-n-t-&#34;&gt;n_t_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;number of time steps&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;size_t&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#variable-n-t-tot-&#34;&gt;n_t_tot_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;total number of time steps across trials&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Matrix&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#variable-l-&#34;&gt;L_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;lower triangle decomp of covariance matrix&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Vector&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#variable-s-&#34;&gt;s_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;singular values&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Matrix&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_s_s_i_d/#variable-ext-obs-t-&#34;&gt;ext_obs_t_&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;extended observability matrix&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;detailed-description&#34;&gt;&#xA;  Detailed Description&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#detailed-description&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typename&lt;/span&gt; Fit &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lds&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;SSID;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;public-function-details&#34;&gt;&#xA;  Public Function Details&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#public-function-details&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;ssid&#34;&gt;&#xA;  &lt;strong&gt;SSID&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ssid&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SSID() &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h3 id=&#34;ssid-1&#34;&gt;&#xA;  &lt;strong&gt;SSID&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ssid-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SSID(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    size_t n_x,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    size_t n_h,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    data_t dt,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    UniformMatrixList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; kMatFreeDim2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; u_train,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    UniformMatrixList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; kMatFreeDim2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; z_train,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; Vector &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; d &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Vector(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;).fill(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;kInf)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Parameters&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>lds::SwitchedController</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_switched_controller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_switched_controller/</guid>
      <description>SwitchedController Type.</description>
    </item>
    <item>
      <title>lds::System</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_system/</guid>
      <description>Linear Dynamical System Type.</description>
    </item>
    <item>
      <title>lds::UniformMatrixList</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/</guid>
      <description>&lt;h1 id=&#34;ldsuniformmatrixlist&#34;&gt;&#xA;  lds::UniformMatrixList&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ldsuniformmatrixlist&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;#detailed-description&#34;&gt;More&amp;hellip;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Inherits from std::vector&amp;lt; Matrix &amp;gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;public-functions&#34;&gt;&#xA;  Public Functions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#public-functions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/#function-uniformmatrixlist&#34;&gt;UniformMatrixList&lt;/a&gt;&lt;/strong&gt;() =default&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt;.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/#function-uniformmatrixlist&#34;&gt;UniformMatrixList&lt;/a&gt;&lt;/strong&gt;(const std::vector&amp;lt; Matrix &amp;gt; &amp;amp; mats, std::array&amp;lt; size_t, 2 &amp;gt; dim ={0, 0})&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt; by copying existing vector of Matrix if dimensions consistent.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/#function-uniformmatrixlist&#34;&gt;UniformMatrixList&lt;/a&gt;&lt;/strong&gt;(std::vector&amp;lt; Matrix &amp;gt; &amp;amp;&amp;amp; mats, std::array&amp;lt; size_t, 2 &amp;gt; dim ={0, 0})&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt; by moving existing vector of Matrix if dimensions consistent.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/#function-uniformmatrixlist&#34;&gt;UniformMatrixList&lt;/a&gt;&lt;/strong&gt;(std::initializer_list&amp;lt; Matrix &amp;gt; mats, std::array&amp;lt; size_t, 2 &amp;gt; dim ={0, 0})&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt; from initializer_list of Matrix if dimensions consistent.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/#function-uniformmatrixlist&#34;&gt;UniformMatrixList&lt;/a&gt;&lt;/strong&gt;(const &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt;&amp;lt; D &amp;gt; &amp;amp; that)&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt; (copy).&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/#function-uniformmatrixlist&#34;&gt;UniformMatrixList&lt;/a&gt;&lt;/strong&gt;(&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt;&amp;lt; D &amp;gt; &amp;amp;&amp;amp; that)&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt; (move).&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/#function-~uniformmatrixlist&#34;&gt;~UniformMatrixList&lt;/a&gt;&lt;/strong&gt;() =default&lt;br&gt;Destroys the object.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const std::array&amp;lt; size_t, 2 &amp;gt; &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/#function-dim&#34;&gt;dim&lt;/a&gt;&lt;/strong&gt;(size_t n =0) const&lt;br&gt;gets dimensions of uniformly sized matrices&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;size_t&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/#function-size&#34;&gt;size&lt;/a&gt;&lt;/strong&gt;()&lt;br&gt;size of container&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const Matrix &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/#function-at&#34;&gt;at&lt;/a&gt;&lt;/strong&gt;(size_t n)&lt;br&gt;gets reference to n^th element&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/#function-swap&#34;&gt;Swap&lt;/a&gt;&lt;/strong&gt;(Matrix &amp;amp; that, size_t n)&lt;br&gt;swaps input matrix with n^th matrix of list&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt;&amp;lt; D &amp;gt; &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/#function-operator=&#34;&gt;operator=&lt;/a&gt;&lt;/strong&gt;(const &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt;&amp;lt; D &amp;gt; &amp;amp; that)&lt;br&gt;assigns the contents (copy)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt;&amp;lt; D &amp;gt; &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/#function-operator=&#34;&gt;operator=&lt;/a&gt;&lt;/strong&gt;(&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/&#34;&gt;UniformMatrixList&lt;/a&gt;&amp;lt; D &amp;gt; &amp;amp;&amp;amp; that)&lt;br&gt;assigns the contents (move)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_matrix_list/#function-append&#34;&gt;append&lt;/a&gt;&lt;/strong&gt;(const Matrix &amp;amp; mat)&lt;br&gt;appends a matrix to the list&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;detailed-description&#34;&gt;&#xA;  Detailed Description&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#detailed-description&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;MatrixListFreeDim D &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;kMatFreeDimNone&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lds&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;UniformMatrixList;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;public-function-details&#34;&gt;&#xA;  Public Function Details&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#public-function-details&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;uniformmatrixlist&#34;&gt;&#xA;  &lt;strong&gt;UniformMatrixList&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#uniformmatrixlist&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;UniformMatrixList() &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h3 id=&#34;uniformmatrixlist-1&#34;&gt;&#xA;  &lt;strong&gt;UniformMatrixList&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#uniformmatrixlist-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;explicit&lt;/span&gt; UniformMatrixList(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; Matrix &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; mats,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;array&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; size_t, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Parameters&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>lds::UniformSystemList</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/</guid>
      <description>&lt;h1 id=&#34;ldsuniformsystemlist&#34;&gt;&#xA;  lds::UniformSystemList&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ldsuniformsystemlist&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;#detailed-description&#34;&gt;More&amp;hellip;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Inherits from std::vector&amp;lt; System &amp;gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;public-functions&#34;&gt;&#xA;  Public Functions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#public-functions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/#function-uniformsystemlist&#34;&gt;UniformSystemList&lt;/a&gt;&lt;/strong&gt;() =default&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/&#34;&gt;UniformSystemList&lt;/a&gt;.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/#function-uniformsystemlist&#34;&gt;UniformSystemList&lt;/a&gt;&lt;/strong&gt;(const std::vector&amp;lt; &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_system/&#34;&gt;System&lt;/a&gt; &amp;gt; &amp;amp; systems, std::array&amp;lt; size_t, 3 &amp;gt; dim ={0, 0, 0})&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/&#34;&gt;UniformSystemList&lt;/a&gt; by copying existing vector of &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_system/&#34;&gt;System&lt;/a&gt; if dimensions consistent.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/#function-uniformsystemlist&#34;&gt;UniformSystemList&lt;/a&gt;&lt;/strong&gt;(std::vector&amp;lt; &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_system/&#34;&gt;System&lt;/a&gt; &amp;gt; &amp;amp;&amp;amp; systems, std::array&amp;lt; size_t, 3 &amp;gt; dim ={0, 0, 0})&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/&#34;&gt;UniformSystemList&lt;/a&gt; by moving existing vector of &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_system/&#34;&gt;System&lt;/a&gt; if dimensions consistent.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/#function-uniformsystemlist&#34;&gt;UniformSystemList&lt;/a&gt;&lt;/strong&gt;(std::initializer_list&amp;lt; &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_system/&#34;&gt;System&lt;/a&gt; &amp;gt; systems, std::array&amp;lt; size_t, 3 &amp;gt; dim ={0, 0, 0})&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/&#34;&gt;UniformSystemList&lt;/a&gt; from initializer_list of &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_system/&#34;&gt;System&lt;/a&gt; if dimensions consistent.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/#function-uniformsystemlist&#34;&gt;UniformSystemList&lt;/a&gt;&lt;/strong&gt;(const &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/&#34;&gt;UniformSystemList&lt;/a&gt; &amp;amp; that)&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/&#34;&gt;UniformSystemList&lt;/a&gt; (copy).&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/#function-uniformsystemlist&#34;&gt;UniformSystemList&lt;/a&gt;&lt;/strong&gt;(&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/&#34;&gt;UniformSystemList&lt;/a&gt; &amp;amp;&amp;amp; that)&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/&#34;&gt;UniformSystemList&lt;/a&gt; (move).&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/#function-~uniformsystemlist&#34;&gt;~UniformSystemList&lt;/a&gt;&lt;/strong&gt;() =default&lt;br&gt;Destroys the object.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const std::array&amp;lt; size_t, 3 &amp;gt; &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/#function-dim&#34;&gt;dim&lt;/a&gt;&lt;/strong&gt;() const&lt;br&gt;gets dimensions of the uniformly sized systems&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;size_t&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/#function-size&#34;&gt;size&lt;/a&gt;&lt;/strong&gt;()&lt;br&gt;size of container&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_system/&#34;&gt;System&lt;/a&gt; &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/#function-at&#34;&gt;at&lt;/a&gt;&lt;/strong&gt;(size_t n)&lt;br&gt;gets reference to n^th element&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/#function-swap&#34;&gt;Swap&lt;/a&gt;&lt;/strong&gt;(&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_system/&#34;&gt;System&lt;/a&gt; &amp;amp; that, size_t n)&lt;br&gt;swaps input system with n^th system of list&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/&#34;&gt;UniformSystemList&lt;/a&gt; &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/#function-operator=&#34;&gt;operator=&lt;/a&gt;&lt;/strong&gt;(const &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/&#34;&gt;UniformSystemList&lt;/a&gt; &amp;amp; that)&lt;br&gt;assigns the contents (copy)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/&#34;&gt;UniformSystemList&lt;/a&gt; &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/#function-operator=&#34;&gt;operator=&lt;/a&gt;&lt;/strong&gt;(&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_system_list/&#34;&gt;UniformSystemList&lt;/a&gt; &amp;amp;&amp;amp; that)&lt;br&gt;assigns the contents (move)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;detailed-description&#34;&gt;&#xA;  Detailed Description&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#detailed-description&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typename&lt;/span&gt; System &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lds&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;UniformSystemList;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;public-function-details&#34;&gt;&#xA;  Public Function Details&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#public-function-details&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;uniformsystemlist&#34;&gt;&#xA;  &lt;strong&gt;UniformSystemList&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#uniformsystemlist&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;UniformSystemList() &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h3 id=&#34;uniformsystemlist-1&#34;&gt;&#xA;  &lt;strong&gt;UniformSystemList&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#uniformsystemlist-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;explicit&lt;/span&gt; UniformSystemList(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; System &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; systems,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;array&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; size_t, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Parameters&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>lds::UniformVectorList</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/</guid>
      <description>&lt;h1 id=&#34;ldsuniformvectorlist&#34;&gt;&#xA;  lds::UniformVectorList&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ldsuniformvectorlist&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Inherits from std::vector&amp;lt; Vector &amp;gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;public-functions&#34;&gt;&#xA;  Public Functions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#public-functions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/#function-uniformvectorlist&#34;&gt;UniformVectorList&lt;/a&gt;&lt;/strong&gt;() =default&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/&#34;&gt;UniformVectorList&lt;/a&gt;.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/#function-uniformvectorlist&#34;&gt;UniformVectorList&lt;/a&gt;&lt;/strong&gt;(const std::vector&amp;lt; Vector &amp;gt; &amp;amp; vecs, size_t dim =0)&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/&#34;&gt;UniformVectorList&lt;/a&gt; by copying existing vector of Vector if dimensions consistent.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/#function-uniformvectorlist&#34;&gt;UniformVectorList&lt;/a&gt;&lt;/strong&gt;(std::vector&amp;lt; Vector &amp;gt; &amp;amp;&amp;amp; vecs, size_t dim =0)&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/&#34;&gt;UniformVectorList&lt;/a&gt; by moving existing vector of Vector if dimensions consistent.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/#function-uniformvectorlist&#34;&gt;UniformVectorList&lt;/a&gt;&lt;/strong&gt;(std::initializer_list&amp;lt; Vector &amp;gt; vecs, size_t dim =0)&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/&#34;&gt;UniformVectorList&lt;/a&gt; from initializer_list of Vector if dimensions consistent.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/#function-uniformvectorlist&#34;&gt;UniformVectorList&lt;/a&gt;&lt;/strong&gt;(const &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/&#34;&gt;UniformVectorList&lt;/a&gt; &amp;amp; that)&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/&#34;&gt;UniformVectorList&lt;/a&gt; (copy)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/#function-uniformvectorlist&#34;&gt;UniformVectorList&lt;/a&gt;&lt;/strong&gt;(&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/&#34;&gt;UniformVectorList&lt;/a&gt; &amp;amp;&amp;amp; that)&lt;br&gt;Constructs a new &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/&#34;&gt;UniformVectorList&lt;/a&gt; (move)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/#function-~uniformvectorlist&#34;&gt;~UniformVectorList&lt;/a&gt;&lt;/strong&gt;() =default&lt;br&gt;Destroys the object.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;size_t&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/#function-dim&#34;&gt;dim&lt;/a&gt;&lt;/strong&gt;() const&lt;br&gt;gets dimensions of the uniformly sized matrices&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;size_t&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/#function-size&#34;&gt;size&lt;/a&gt;&lt;/strong&gt;()&lt;br&gt;size of container&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;const Vector &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/#function-at&#34;&gt;at&lt;/a&gt;&lt;/strong&gt;(size_t n)&lt;br&gt;gets reference to n^th element&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;void&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/#function-swap&#34;&gt;Swap&lt;/a&gt;&lt;/strong&gt;(Vector &amp;amp; that, size_t n)&lt;br&gt;swaps input matrix with n^th vector of list&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/&#34;&gt;UniformVectorList&lt;/a&gt; &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/#function-operator=&#34;&gt;operator=&lt;/a&gt;&lt;/strong&gt;(const &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/&#34;&gt;UniformVectorList&lt;/a&gt; &amp;amp; that)&lt;br&gt;assigns the contents (copy)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/&#34;&gt;UniformVectorList&lt;/a&gt; &amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/#function-operator=&#34;&gt;operator=&lt;/a&gt;&lt;/strong&gt;(&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/classes/classlds_1_1_uniform_vector_list/&#34;&gt;UniformVectorList&lt;/a&gt; &amp;amp;&amp;amp; that)&lt;br&gt;assigns the contents (move)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;public-function-details&#34;&gt;&#xA;  Public Function Details&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#public-function-details&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;uniformvectorlist&#34;&gt;&#xA;  &lt;strong&gt;UniformVectorList&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#uniformvectorlist&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;UniformVectorList() &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h3 id=&#34;uniformvectorlist-1&#34;&gt;&#xA;  &lt;strong&gt;UniformVectorList&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#uniformvectorlist-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;explicit&lt;/span&gt; UniformVectorList(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; Vector &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; vecs,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    size_t dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Parameters&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>ldsCtrlEst_h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_156a98879751e549d6939ca71a62d61f/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_156a98879751e549d6939ca71a62d61f/</guid>
      <description>&lt;h1 id=&#34;ldsctrlest_h&#34;&gt;&#xA;  ldsCtrlEst_h&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ldsctrlest_h&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;files&#34;&gt;&#xA;  Files&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#files&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds_8h/#file-lds.h&#34;&gt;ldsCtrlEst_h/lds.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;code&gt;lds&lt;/code&gt; namespace&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__ctrl_8h/#file-lds-ctrl.h&#34;&gt;ldsCtrlEst_h/lds_ctrl.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;Controller.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit_8h/#file-lds-fit.h&#34;&gt;ldsCtrlEst_h/lds_fit.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;LDS base fit type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit__em_8h/#file-lds-fit-em.h&#34;&gt;ldsCtrlEst_h/lds_fit_em.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;subspace identification&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit__ssid_8h/#file-lds-fit-ssid.h&#34;&gt;ldsCtrlEst_h/lds_fit_ssid.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;subspace identification&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian_8h/#file-lds-gaussian.h&#34;&gt;ldsCtrlEst_h/lds_gaussian.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;code&gt;glds&lt;/code&gt; namespace&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__ctrl_8h/#file-lds-gaussian-ctrl.h&#34;&gt;ldsCtrlEst_h/lds_gaussian_ctrl.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;GLDS Controller.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit_8h/#file-lds-gaussian-fit.h&#34;&gt;ldsCtrlEst_h/lds_gaussian_fit.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;GLDS fit type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit__em_8h/#file-lds-gaussian-fit-em.h&#34;&gt;ldsCtrlEst_h/lds_gaussian_fit_em.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;GLDS E-M fit type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit__ssid_8h/#file-lds-gaussian-fit-ssid.h&#34;&gt;ldsCtrlEst_h/lds_gaussian_fit_ssid.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;GLDS SSID fit type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sctrl_8h/#file-lds-gaussian-sctrl.h&#34;&gt;ldsCtrlEst_h/lds_gaussian_sctrl.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;GLDS switched controller type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sys_8h/#file-lds-gaussian-sys.h&#34;&gt;ldsCtrlEst_h/lds_gaussian_sys.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;GLDS base type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson_8h/#file-lds-poisson.h&#34;&gt;ldsCtrlEst_h/lds_poisson.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;code&gt;plds&lt;/code&gt; namespace&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__ctrl_8h/#file-lds-poisson-ctrl.h&#34;&gt;ldsCtrlEst_h/lds_poisson_ctrl.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;PLDS controller type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit_8h/#file-lds-poisson-fit.h&#34;&gt;ldsCtrlEst_h/lds_poisson_fit.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;PLDS base fit type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit__em_8h/#file-lds-poisson-fit-em.h&#34;&gt;ldsCtrlEst_h/lds_poisson_fit_em.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;PLDS E-M fit type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit__ssid_8h/#file-lds-poisson-fit-ssid.h&#34;&gt;ldsCtrlEst_h/lds_poisson_fit_ssid.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;PLDS SSID fit type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sctrl_8h/#file-lds-poisson-sctrl.h&#34;&gt;ldsCtrlEst_h/lds_poisson_sctrl.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;PLDS switched controller type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sys_8h/#file-lds-poisson-sys.h&#34;&gt;ldsCtrlEst_h/lds_poisson_sys.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;PLDS base type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sctrl_8h/#file-lds-sctrl.h&#34;&gt;ldsCtrlEst_h/lds_sctrl.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;SwitchedController type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sys_8h/#file-lds-sys.h&#34;&gt;ldsCtrlEst_h/lds_sys.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;LDS base type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__mats_8h/#file-lds-uniform-mats.h&#34;&gt;ldsCtrlEst_h/lds_uniform_mats.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;List of uniformly sized matrices.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__systems_8h/#file-lds-uniform-systems.h&#34;&gt;ldsCtrlEst_h/lds_uniform_systems.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;List of uniformly sized Systems.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__vecs_8h/#file-lds-uniform-vecs.h&#34;&gt;ldsCtrlEst_h/lds_uniform_vecs.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;List of uniformly sized vectors.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/mex__c__util_8h/#file-mex-c-util.h&#34;&gt;ldsCtrlEst_h/mex_c_util.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;arma &amp;lt;-&amp;gt; mex interoperability utilities (Matlab C API)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/mex__cpp__util_8h/#file-mex-cpp-util.h&#34;&gt;ldsCtrlEst_h/mex_cpp_util.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;arma &amp;lt;-&amp;gt; mex interoperability utilities (Matlab C++ API)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Updated on 31 March 2025 at 16:31:00 EDT&lt;/p&gt;</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_ctrl.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__ctrl_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__ctrl_8h/</guid>
      <description>Controller.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_fit_em.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit__em_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit__em_8h/</guid>
      <description>subspace identification</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_fit_ssid.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit__ssid_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit__ssid_8h/</guid>
      <description>subspace identification</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_fit.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit_8h/</guid>
      <description>LDS base fit type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_gaussian_ctrl.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__ctrl_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__ctrl_8h/</guid>
      <description>GLDS Controller.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_gaussian_fit_em.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit__em_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit__em_8h/</guid>
      <description>GLDS E-M fit type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_gaussian_fit_ssid.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit__ssid_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit__ssid_8h/</guid>
      <description>GLDS SSID fit type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_gaussian_fit.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit_8h/</guid>
      <description>GLDS fit type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_gaussian_sctrl.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sctrl_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sctrl_8h/</guid>
      <description>GLDS switched controller type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_gaussian_sys.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sys_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sys_8h/</guid>
      <description>GLDS base type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_gaussian.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian_8h/</guid>
      <description>glds namespace</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_poisson_ctrl.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__ctrl_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__ctrl_8h/</guid>
      <description>PLDS controller type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_poisson_fit_em.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit__em_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit__em_8h/</guid>
      <description>PLDS E-M fit type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_poisson_fit_ssid.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit__ssid_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit__ssid_8h/</guid>
      <description>PLDS SSID fit type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_poisson_fit.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit_8h/</guid>
      <description>PLDS base fit type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_poisson_sctrl.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sctrl_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sctrl_8h/</guid>
      <description>PLDS switched controller type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_poisson_sys.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sys_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sys_8h/</guid>
      <description>PLDS base type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_poisson.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson_8h/</guid>
      <description>plds namespace</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_sctrl.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sctrl_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sctrl_8h/</guid>
      <description>SwitchedController type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_sys.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sys_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sys_8h/</guid>
      <description>LDS base type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_uniform_mats.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__mats_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__mats_8h/</guid>
      <description>List of uniformly sized matrices.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_uniform_systems.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__systems_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__systems_8h/</guid>
      <description>List of uniformly sized Systems.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_uniform_vecs.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__vecs_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__vecs_8h/</guid>
      <description>List of uniformly sized vectors.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds_8h/</guid>
      <description>lds namespace</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/mex_c_util.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/mex__c__util_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/mex__c__util_8h/</guid>
      <description>arma &amp;lt;-&amp;gt; mex interoperability utilities (Matlab C API)</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/mex_cpp_util.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/mex__cpp__util_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/mex__cpp__util_8h/</guid>
      <description>arma &amp;lt;-&amp;gt; mex interoperability utilities (Matlab C++ API)</description>
    </item>
    <item>
      <title>Models</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/terminology/model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/terminology/model/</guid>
      <description>&lt;h1 id=&#34;model-definitions&#34;&gt;&#xA;  Model Definitions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#model-definitions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;This library provides methods for control and estimation of linear dynamical systems (LDS) of the following form:&#xA;&#xA;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/katex/katex.min.css&#34; /&gt;&#xA;&lt;script defer src=&#34;https://stanley-rozell.github.io/lds-ctrl-est/katex/katex.min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script defer src=&#34;https://stanley-rozell.github.io/lds-ctrl-est/katex/auto-render.min.js&#34; onload=&#34;renderMathInElement(document.body);&#34;&gt;&lt;/script&gt;&lt;span&gt;&#xA;  \[\mathbf{x}_{t&amp;#43;1} = f\left( \mathbf{x}_{t}, \mathbf{v}_{t} \right) = \mathbf{A} \mathbf{x}_{t} &amp;#43; \mathbf{B} \mathbf{v}_{t} &amp;#43; \mathbf{m}_{t} &amp;#43; \mathbf{w}_{t}\]&#xA;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;span&gt;&#xA;  \[\mathbf{y}_{t} = h\left( \mathbf{x}_{t} \right)\]&#xA;&lt;/span&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;t           : time index&#xA;x           : system state&#xA;v = g%u     : input (e.g., in physical units used for model fit)&#xA;u           : control signal sent to actuator (e.g., in Volts)&#xA;y           : system output&#xA;m           : process disturbance&#xA;w ~ N(0, Q) : process noise/disturbance&#xA;&#xA;A           : state matrix&#xA;B           : input coupling matrix&#xA;g           : input gain (e.g., for converting to control signal actuator voltage)&#xA;              n.b., assumes this conversion is linear&#xA;Q           : process noise covariance&#xA;&#xA;%           : element-wise multiplication&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;lds-with-gaussian-observations&#34;&gt;&#xA;  LDS with Gaussian Observations&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#lds-with-gaussian-observations&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;For linear dynamical systems whose outputs are assumed to be corrupted by additive Gaussian noise before measurement (Gaussian LDS models), the output function takes the following form.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PLDS State Estimation</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/tutorials/eg_plds_state_estimation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/tutorials/eg_plds_state_estimation/</guid>
      <description>&lt;h1 id=&#34;plds-state-estimation-tutorial&#34;&gt;&#xA;  PLDS State Estimation Tutorial&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#plds-state-estimation-tutorial&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;This tutorial shows how to use this library to estimate the state of an LDS with Poisson observations from input/output data. In place of a physical system, another PLDS model (&lt;code&gt;lds::poisson::System&lt;/code&gt;) receives random inputs and provides measurements for the state estimator. For the sake of example, the only parameter mismatch is assumed to be the process disturbance, which is adaptively re-estimated.&lt;/p&gt;&#xA;&lt;p&gt;The full code for this can be found &lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/examples/eg_plds_est_8cpp-example/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PLDS Switched Control</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/tutorials/eg_switched_plds_control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/tutorials/eg_switched_plds_control/</guid>
      <description>&lt;h1 id=&#34;plds-switched-control-tutorial&#34;&gt;&#xA;  PLDS Switched Control Tutorial&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#plds-switched-control-tutorial&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;This tutorial shows how to use this library to control a system with a switched PLDS controller (&lt;code&gt;lds::poisson::SwitchedController&lt;/code&gt;). This type of controller is applicable in scenarios where a physical system is not accurately captured by a &lt;strong&gt;single&lt;/strong&gt; LDS but has &lt;strong&gt;multiple&lt;/strong&gt; discrete operating modes where the dynamics can be well-approximated as linear.&lt;/p&gt;&#xA;&lt;p&gt;In the example that follows, another PLDS model (&lt;code&gt;lds::poisson::System&lt;/code&gt;) is used in place of a physical system. It receives control inputs and provides measurements for the simulated feedback control loop. This system stochastically flips between two input gains. Here, the controller is assumed to have a perfect model of the switching system being controlled. Note that in practice, users would need to have a decoder that estimates operating mode of the physical system being controlled. This library does not currently include operating mode estimation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>src</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_68267d1309a1af8e8297ef4c3efbcdba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_68267d1309a1af8e8297ef4c3efbcdba/</guid>
      <description>&lt;h1 id=&#34;src&#34;&gt;&#xA;  src&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#src&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;files&#34;&gt;&#xA;  Files&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#files&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds_8cpp/#file-lds.cpp&#34;&gt;src/lds.cpp&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;misc lds namespace functions&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sys_8cpp/#file-lds-gaussian-sys.cpp&#34;&gt;src/lds_gaussian_sys.cpp&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;GLDS base type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sys_8cpp/#file-lds-poisson-sys.cpp&#34;&gt;src/lds_poisson_sys.cpp&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;PLDS base type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sys_8cpp/#file-lds-sys.cpp&#34;&gt;src/lds_sys.cpp&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;LDS base type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__vecs_8cpp/#file-lds-uniform-vecs.cpp&#34;&gt;src/lds_uniform_vecs.cpp&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;Uniformly sized vectors.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Updated on 31 March 2025 at 16:31:01 EDT&lt;/p&gt;</description>
    </item>
    <item>
      <title>src/lds_gaussian_sys.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sys_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sys_8cpp/</guid>
      <description>GLDS base type.</description>
    </item>
    <item>
      <title>src/lds_poisson_sys.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sys_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sys_8cpp/</guid>
      <description>PLDS base type.</description>
    </item>
    <item>
      <title>src/lds_sys.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sys_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sys_8cpp/</guid>
      <description>LDS base type.</description>
    </item>
    <item>
      <title>src/lds_uniform_vecs.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__vecs_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__vecs_8cpp/</guid>
      <description>Uniformly sized vectors.</description>
    </item>
    <item>
      <title>src/lds.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds_8cpp/</guid>
      <description>misc lds namespace functions</description>
    </item>
    <item>
      <title>std</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacestd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/namespaces/namespacestd/</guid>
      <description>&lt;h1 id=&#34;std&#34;&gt;&#xA;  std&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#std&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;br&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Updated on 31 March 2025 at 16:31:00 EDT&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
