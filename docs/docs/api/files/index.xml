<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Files on LDS C&amp;E</title>
    <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/</link>
    <description>Recent content in Files on LDS C&amp;E</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>examples</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_d28a4824dc47e487b107a5db32ef43c4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_d28a4824dc47e487b107a5db32ef43c4/</guid>
      <description>&lt;h1 id=&#34;examples&#34;&gt;&#xA;  examples&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#examples&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;files&#34;&gt;&#xA;  Files&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#files&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__ctrl_8cpp/#file-eg-glds-ctrl.cpp&#34;&gt;examples/eg_glds_ctrl.cpp&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__du__plds__ctrl_8cpp/#file-eg-glds-du-plds-ctrl.cpp&#34;&gt;examples/eg_glds_du_plds_ctrl.cpp&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__ctrl_8cpp/#file-eg-plds-ctrl.cpp&#34;&gt;examples/eg_plds_ctrl.cpp&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__est_8cpp/#file-eg-plds-est.cpp&#34;&gt;examples/eg_plds_est.cpp&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__switched__ctrl_8cpp/#file-eg-plds-switched-ctrl.cpp&#34;&gt;examples/eg_plds_switched_ctrl.cpp&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Updated on 31 March 2025 at 16:04:30 EDT&lt;/p&gt;</description>
    </item>
    <item>
      <title>examples/eg_glds_ctrl.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__ctrl_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__ctrl_8cpp/</guid>
      <description>&lt;h1 id=&#34;exampleseg_glds_ctrlcpp&#34;&gt;&#xA;  examples/eg_glds_ctrl.cpp&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#exampleseg_glds_ctrlcpp&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;types&#34;&gt;&#xA;  Types&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#types&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using arma::Mat&amp;lt; data_t &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__ctrl_8cpp/#using-matrix&#34;&gt;Matrix&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using arma::Col&amp;lt; data_t &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__ctrl_8cpp/#using-vector&#34;&gt;Vector&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using double&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__ctrl_8cpp/#using-data-t&#34;&gt;data_t&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;functions&#34;&gt;&#xA;  Functions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#functions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;int&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__ctrl_8cpp/#function-main&#34;&gt;main&lt;/a&gt;&lt;/strong&gt;()&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;type-details&#34;&gt;&#xA;  Type Details&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#type-details&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;matrix&#34;&gt;&#xA;  Matrix&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#matrix&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Matrix &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Mat&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;data_t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;vector&#34;&gt;&#xA;  Vector&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#vector&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Vector &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Col&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;data_t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;data_t&#34;&gt;&#xA;  data_t&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#data_t&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;data_t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Type of all data in library. If need 32b, change &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;float&lt;/code&gt;. This could be potentially useful for large scale problems where there are memory constraints.&lt;/p&gt;</description>
    </item>
    <item>
      <title>examples/eg_glds_du_plds_ctrl.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__du__plds__ctrl_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__du__plds__ctrl_8cpp/</guid>
      <description>&lt;h1 id=&#34;exampleseg_glds_du_plds_ctrlcpp&#34;&gt;&#xA;  examples/eg_glds_du_plds_ctrl.cpp&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#exampleseg_glds_du_plds_ctrlcpp&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;types&#34;&gt;&#xA;  Types&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#types&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using double&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__du__plds__ctrl_8cpp/#using-data-t&#34;&gt;data_t&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using arma::Mat&amp;lt; data_t &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__du__plds__ctrl_8cpp/#using-matrix&#34;&gt;Matrix&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using arma::Col&amp;lt; data_t &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__du__plds__ctrl_8cpp/#using-vector&#34;&gt;Vector&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;functions&#34;&gt;&#xA;  Functions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#functions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;int&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__glds__du__plds__ctrl_8cpp/#function-main&#34;&gt;main&lt;/a&gt;&lt;/strong&gt;()&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;type-details&#34;&gt;&#xA;  Type Details&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#type-details&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;data_t&#34;&gt;&#xA;  data_t&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#data_t&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;data_t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Type of all data in library. If need 32b, change &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;float&lt;/code&gt;. This could be potentially useful for large scale problems where there are memory constraints.&lt;/p&gt;&#xA;&lt;h3 id=&#34;matrix&#34;&gt;&#xA;  Matrix&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#matrix&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Matrix &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Mat&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;data_t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;vector&#34;&gt;&#xA;  Vector&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#vector&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Vector &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Col&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;data_t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;function-details&#34;&gt;&#xA;  Function Details&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#function-details&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;main&#34;&gt;&#xA;  main&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#main&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; main()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Going to simulate a switching disturbance (m) acting on system&lt;/p&gt;</description>
    </item>
    <item>
      <title>examples/eg_plds_ctrl.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__ctrl_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__ctrl_8cpp/</guid>
      <description>&lt;h1 id=&#34;exampleseg_plds_ctrlcpp&#34;&gt;&#xA;  examples/eg_plds_ctrl.cpp&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#exampleseg_plds_ctrlcpp&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;types&#34;&gt;&#xA;  Types&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#types&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using arma::Mat&amp;lt; data_t &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__ctrl_8cpp/#using-matrix&#34;&gt;Matrix&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using arma::Col&amp;lt; data_t &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__ctrl_8cpp/#using-vector&#34;&gt;Vector&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using double&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__ctrl_8cpp/#using-data-t&#34;&gt;data_t&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;functions&#34;&gt;&#xA;  Functions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#functions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;int&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__ctrl_8cpp/#function-main&#34;&gt;main&lt;/a&gt;&lt;/strong&gt;()&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;type-details&#34;&gt;&#xA;  Type Details&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#type-details&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;matrix&#34;&gt;&#xA;  Matrix&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#matrix&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Matrix &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Mat&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;data_t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;vector&#34;&gt;&#xA;  Vector&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#vector&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Vector &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Col&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;data_t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;data_t&#34;&gt;&#xA;  data_t&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#data_t&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;data_t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Type of all data in library. If need 32b, change &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;float&lt;/code&gt;. This could be potentially useful for large scale problems where there are memory constraints.&lt;/p&gt;</description>
    </item>
    <item>
      <title>examples/eg_plds_est.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__est_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__est_8cpp/</guid>
      <description>&lt;h1 id=&#34;exampleseg_plds_estcpp&#34;&gt;&#xA;  examples/eg_plds_est.cpp&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#exampleseg_plds_estcpp&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;types&#34;&gt;&#xA;  Types&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#types&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using arma::Mat&amp;lt; data_t &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__est_8cpp/#using-matrix&#34;&gt;Matrix&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using arma::Col&amp;lt; data_t &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__est_8cpp/#using-vector&#34;&gt;Vector&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using double&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__est_8cpp/#using-data-t&#34;&gt;data_t&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;functions&#34;&gt;&#xA;  Functions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#functions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Matrix&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__est_8cpp/#function-random-walk&#34;&gt;random_walk&lt;/a&gt;&lt;/strong&gt;(size_t n_t, const Matrix &amp;amp; Q, const Vector &amp;amp; x0)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;int&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__est_8cpp/#function-main&#34;&gt;main&lt;/a&gt;&lt;/strong&gt;()&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;type-details&#34;&gt;&#xA;  Type Details&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#type-details&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;matrix&#34;&gt;&#xA;  Matrix&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#matrix&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Matrix &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Mat&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;data_t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;vector&#34;&gt;&#xA;  Vector&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#vector&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Vector &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Col&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;data_t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;data_t&#34;&gt;&#xA;  data_t&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#data_t&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;data_t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Type of all data in library. If need 32b, change &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;float&lt;/code&gt;. This could be potentially useful for large scale problems where there are memory constraints.&lt;/p&gt;</description>
    </item>
    <item>
      <title>examples/eg_plds_switched_ctrl.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__switched__ctrl_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__switched__ctrl_8cpp/</guid>
      <description>&lt;h1 id=&#34;exampleseg_plds_switched_ctrlcpp&#34;&gt;&#xA;  examples/eg_plds_switched_ctrl.cpp&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#exampleseg_plds_switched_ctrlcpp&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;types&#34;&gt;&#xA;  Types&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#types&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using double&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__switched__ctrl_8cpp/#using-data-t&#34;&gt;data_t&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using arma::Mat&amp;lt; data_t &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__switched__ctrl_8cpp/#using-matrix&#34;&gt;Matrix&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;using arma::Col&amp;lt; data_t &amp;gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__switched__ctrl_8cpp/#using-vector&#34;&gt;Vector&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;functions&#34;&gt;&#xA;  Functions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#functions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;int&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/eg__plds__switched__ctrl_8cpp/#function-main&#34;&gt;main&lt;/a&gt;&lt;/strong&gt;()&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;type-details&#34;&gt;&#xA;  Type Details&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#type-details&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;data_t&#34;&gt;&#xA;  data_t&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#data_t&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;data_t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Type of all data in library. If need 32b, change &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;float&lt;/code&gt;. This could be potentially useful for large scale problems where there are memory constraints.&lt;/p&gt;&#xA;&lt;h3 id=&#34;matrix&#34;&gt;&#xA;  Matrix&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#matrix&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Matrix &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Mat&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;data_t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;vector&#34;&gt;&#xA;  Vector&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#vector&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Vector &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Col&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;data_t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;function-details&#34;&gt;&#xA;  Function Details&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#function-details&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;main&#34;&gt;&#xA;  main&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#main&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; main()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;source-code&#34;&gt;&#xA;  Source code&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#source-code&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//===-- eg_plds_switched_ctrl.cpp - Example Switched PLDS Control ---===//&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Copyright 2021 Michael Bolus&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Copyright 2021 Georgia Institute of Technology&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Licensed under the Apache License, Version 2.0 (the &amp;#34;License&amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// you may not use this file except in compliance with the License.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// You may obtain a copy of the License at&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//     http://www.apache.org/licenses/LICENSE-2.0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Unless required by applicable law or agreed to in writing, software&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// distributed under the License is distributed on an &amp;#34;AS IS&amp;#34; BASIS,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// See the License for the specific language governing permissions and&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// limitations under the License.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//===----------------------------------------------------------------------===//&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//===----------------------------------------------------------------------===//&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;ldsCtrlEst&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;data_t;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Matrix;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Vector;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;cout;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; ********** Example Switched Poisson LDS Control ********** &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// whether to do switched control&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; do_switch_ctrl &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// Make SISO system sampled at 1kHz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  data_t dt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1e-3&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  size_t n_u &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  size_t n_x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  size_t n_y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// no time steps for simulation.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt; n_t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static_cast&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;size_t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;30.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; dt);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// for simulating switching&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  size_t which_mode &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  data_t pr_21 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1e-3&lt;/span&gt;;   &lt;span style=&#34;color:#75715e&#34;&gt;// prob mode 1 -&amp;gt; 2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  data_t pr_12 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pr_21;  &lt;span style=&#34;color:#75715e&#34;&gt;// prob mode 2 -&amp;gt; 1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// simulated system being controlled&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;poisson&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;System controlled_system(n_u, n_x, n_y, dt);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// **Assume the system is not well characterized by one LDS, but is well&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// characterized by two LDS models with different input matrices.**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  data_t scale_sys_b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Matrix a(n_x, n_x, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;eye);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  a[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.985&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Matrix b1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Matrix(n_x, n_u).fill(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.05&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Vector d &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Vector(n_y, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;zeros).fill(log(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; dt));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  controlled_system.set_A(a);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  controlled_system.set_B(b1);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  controlled_system.set_d(d);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  controlled_system.Reset();  &lt;span style=&#34;color:#75715e&#34;&gt;// reset to initial conditions&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// reference&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Vector y_ref0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Vector(n_y, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;zeros).fill(&lt;span style=&#34;color:#ae81ff&#34;&gt;25.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; dt);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// Let underlying system 1 be more sensitive than system 2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Matrix b2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Matrix(n_x, n_u).fill(b1[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; scale_sys_b);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// create switched controller&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;poisson&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;SwitchedController switched_controller;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;UniformMatrixList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; k_x;  &lt;span style=&#34;color:#75715e&#34;&gt;// feedback controller gains&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// create switched controller sub-systems&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// system 1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;poisson&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;System sys1(controlled_system);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// set process noise covariance&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    Matrix q_controller &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Matrix(n_x, n_x, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;eye) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5e-3&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sys1.set_Q(q_controller);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// adaptively estimate process disturbance (m)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// n.b. using arbitrary default value for process noise if enabled.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    sys1.do_adapt_m &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// setting initial mode to target to avoid large error at onset:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    Vector x0_controller &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;log(y_ref0) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; d;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sys1.set_x0(x0_controller);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sys1.Reset();  &lt;span style=&#34;color:#75715e&#34;&gt;// reset to initial conditions&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.....................................&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sys1:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.....................................&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sys1.Print();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.....................................&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// system 2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;poisson&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;System sys2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sys1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// set parameters&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    sys2.set_B(b2);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.....................................&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sys2:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.....................................&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sys2.Print();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.....................................&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;UniformSystemList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;poisson&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;System&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; systems({sys1, sys2});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// controller gains for underlying system s:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    Matrix k_x1(n_u, n_x, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;ones);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Matrix k_x2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; scale_sys_b &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; k_x1;  &lt;span style=&#34;color:#75715e&#34;&gt;// system2 is x-times less sensitive.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    k_x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;UniformMatrixList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;({k_x1, k_x2});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    data_t u_lb &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    data_t u_ub &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5.0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    switched_controller &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;move(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;poisson&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;SwitchedController(std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;move(systems), u_lb, u_ub));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// Control variables&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  size_t control_type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;  &lt;span style=&#34;color:#75715e&#34;&gt;// no integral action, etc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  switched_controller.set_control_type(control_type);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  switched_controller.set_Kc(std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;move(k_x));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  switched_controller.set_y_ref(y_ref0);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;poisson&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;System&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; systems_vec(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;poisson&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;System());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;UniformSystemList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;lds&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;poisson&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;System&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; systems(std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;move(systems_vec));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.....................................&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;switched_controller:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.....................................&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  switched_controller.Print();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.....................................&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// Fake measurements&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Matrix z(n_y, n_t, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;zeros);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// Will later contain control.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Matrix u(n_u, n_t, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;zeros);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// create Matrix to save outputs in...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Matrix y_hat(n_y, n_t, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;zeros);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Matrix y_true(n_y, n_t, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;zeros);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Matrix y_ref &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Matrix(n_y, n_t).fill(y_ref0[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// modes and gain/disturbance params&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Matrix x_hat(n_x, n_t, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;zeros);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Matrix x_true(n_x, n_t, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;zeros);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Matrix mode(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, n_t, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;ones);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// set initial val&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  y_hat.col(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; switched_controller.sys().y();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  y_true.col(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; controlled_system.y();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  x_hat.col(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; switched_controller.sys().x();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  x_true.col(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; controlled_system.x();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Starting &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; n_t &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; dt &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; sec simulation ... &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt; start &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;chrono&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;high_resolution_clock&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;now();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (size_t t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; t &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; n_t; t&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Let the controlled system stochastically change gain&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Assume another algorithm decodes this mode change and signals the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// switched_controller&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    Vector chance(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;fill&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;randu);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (which_mode &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;// mode1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (chance[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; pr_21) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        which_mode &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        controlled_system.set_B(b2);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (do_switch_ctrl) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          switched_controller.Switch(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {  &lt;span style=&#34;color:#75715e&#34;&gt;// mode2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (chance[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; pr_12) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        which_mode &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        controlled_system.set_B(b1);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (do_switch_ctrl) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          switched_controller.Switch(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Simulate the true system.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    z.col(t) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; controlled_system.Simulate(u.col(t &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// perform control&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    u.col(t) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; switched_controller.ControlOutputReference(z.col(t));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    mode.col(t) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; which_mode;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    y_ref.col(t) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; y_ref0;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    y_true.col(t) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; controlled_system.y();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x_true.col(t) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; controlled_system.x();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    y_hat.col(t) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; switched_controller.sys().y();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x_hat.col(t) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; switched_controller.sys().x();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt; finish &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;chrono&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;high_resolution_clock&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;now();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;chrono&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;duration&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;data_t, std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;milli&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; sim_time_ms &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; finish &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; start;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Finished simulation in &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; sim_time_ms.count() &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; ms.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(app. &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (sim_time_ms.count() &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; n_t) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1e3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; us/time-step)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// saved variables: dt, y_hat, x_hat, m_hat, z, u, y_ref, y_true,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// x_true, m_true saving with hdf5 via armadillo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hdf5_opts&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;opts replace &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hdf5_opts&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;replace;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt; dt_vec &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Vector(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;).fill(dt);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  dt_vec.save(arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hdf5_name(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eg_plds_switched_ctrl.h5&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dt&amp;#34;&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  y_ref.save(arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hdf5_name(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eg_plds_switched_ctrl.h5&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y_ref&amp;#34;&lt;/span&gt;, replace));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  u.save(arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hdf5_name(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eg_plds_switched_ctrl.h5&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;u&amp;#34;&lt;/span&gt;, replace));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  z.save(arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hdf5_name(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eg_plds_switched_ctrl.h5&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;z&amp;#34;&lt;/span&gt;, replace));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  x_true.save(arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hdf5_name(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eg_plds_switched_ctrl.h5&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x_true&amp;#34;&lt;/span&gt;, replace));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  y_true.save(arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hdf5_name(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eg_plds_switched_ctrl.h5&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y_true&amp;#34;&lt;/span&gt;, replace));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  x_hat.save(arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hdf5_name(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eg_plds_switched_ctrl.h5&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x_hat&amp;#34;&lt;/span&gt;, replace));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  y_hat.save(arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hdf5_name(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eg_plds_switched_ctrl.h5&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y_hat&amp;#34;&lt;/span&gt;, replace));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  mode.save(arma&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hdf5_name(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eg_plds_switched_ctrl.h5&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mode&amp;#34;&lt;/span&gt;, replace));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;p&gt;Updated on 31 March 2025 at 16:04:30 EDT&lt;/p&gt;</description>
    </item>
    <item>
      <title>include</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_d44c64559bbebec7f509842c48db8b23/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_d44c64559bbebec7f509842c48db8b23/</guid>
      <description>&lt;h1 id=&#34;include&#34;&gt;&#xA;  include&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#include&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;directories&#34;&gt;&#xA;  Directories&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#directories&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_156a98879751e549d6939ca71a62d61f/#dir-ldsctrlest-h&#34;&gt;ldsCtrlEst_h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Updated on 31 March 2025 at 16:04:30 EDT&lt;/p&gt;</description>
    </item>
    <item>
      <title>ldsCtrlEst_h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_156a98879751e549d6939ca71a62d61f/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_156a98879751e549d6939ca71a62d61f/</guid>
      <description>&lt;h1 id=&#34;ldsctrlest_h&#34;&gt;&#xA;  ldsCtrlEst_h&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ldsctrlest_h&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;files&#34;&gt;&#xA;  Files&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#files&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds_8h/#file-lds.h&#34;&gt;ldsCtrlEst_h/lds.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;code&gt;lds&lt;/code&gt; namespace&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__ctrl_8h/#file-lds-ctrl.h&#34;&gt;ldsCtrlEst_h/lds_ctrl.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;Controller.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit_8h/#file-lds-fit.h&#34;&gt;ldsCtrlEst_h/lds_fit.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;LDS base fit type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit__em_8h/#file-lds-fit-em.h&#34;&gt;ldsCtrlEst_h/lds_fit_em.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;subspace identification&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit__ssid_8h/#file-lds-fit-ssid.h&#34;&gt;ldsCtrlEst_h/lds_fit_ssid.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;subspace identification&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian_8h/#file-lds-gaussian.h&#34;&gt;ldsCtrlEst_h/lds_gaussian.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;code&gt;glds&lt;/code&gt; namespace&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__ctrl_8h/#file-lds-gaussian-ctrl.h&#34;&gt;ldsCtrlEst_h/lds_gaussian_ctrl.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;GLDS Controller.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit_8h/#file-lds-gaussian-fit.h&#34;&gt;ldsCtrlEst_h/lds_gaussian_fit.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;GLDS fit type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit__em_8h/#file-lds-gaussian-fit-em.h&#34;&gt;ldsCtrlEst_h/lds_gaussian_fit_em.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;GLDS E-M fit type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit__ssid_8h/#file-lds-gaussian-fit-ssid.h&#34;&gt;ldsCtrlEst_h/lds_gaussian_fit_ssid.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;GLDS SSID fit type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sctrl_8h/#file-lds-gaussian-sctrl.h&#34;&gt;ldsCtrlEst_h/lds_gaussian_sctrl.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;GLDS switched controller type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sys_8h/#file-lds-gaussian-sys.h&#34;&gt;ldsCtrlEst_h/lds_gaussian_sys.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;GLDS base type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson_8h/#file-lds-poisson.h&#34;&gt;ldsCtrlEst_h/lds_poisson.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;code&gt;plds&lt;/code&gt; namespace&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__ctrl_8h/#file-lds-poisson-ctrl.h&#34;&gt;ldsCtrlEst_h/lds_poisson_ctrl.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;PLDS controller type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit_8h/#file-lds-poisson-fit.h&#34;&gt;ldsCtrlEst_h/lds_poisson_fit.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;PLDS base fit type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit__em_8h/#file-lds-poisson-fit-em.h&#34;&gt;ldsCtrlEst_h/lds_poisson_fit_em.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;PLDS E-M fit type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit__ssid_8h/#file-lds-poisson-fit-ssid.h&#34;&gt;ldsCtrlEst_h/lds_poisson_fit_ssid.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;PLDS SSID fit type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sctrl_8h/#file-lds-poisson-sctrl.h&#34;&gt;ldsCtrlEst_h/lds_poisson_sctrl.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;PLDS switched controller type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sys_8h/#file-lds-poisson-sys.h&#34;&gt;ldsCtrlEst_h/lds_poisson_sys.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;PLDS base type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sctrl_8h/#file-lds-sctrl.h&#34;&gt;ldsCtrlEst_h/lds_sctrl.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;SwitchedController type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sys_8h/#file-lds-sys.h&#34;&gt;ldsCtrlEst_h/lds_sys.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;LDS base type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__mats_8h/#file-lds-uniform-mats.h&#34;&gt;ldsCtrlEst_h/lds_uniform_mats.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;List of uniformly sized matrices.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__systems_8h/#file-lds-uniform-systems.h&#34;&gt;ldsCtrlEst_h/lds_uniform_systems.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;List of uniformly sized Systems.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__vecs_8h/#file-lds-uniform-vecs.h&#34;&gt;ldsCtrlEst_h/lds_uniform_vecs.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;List of uniformly sized vectors.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/mex__c__util_8h/#file-mex-c-util.h&#34;&gt;ldsCtrlEst_h/mex_c_util.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;arma &amp;lt;-&amp;gt; mex interoperability utilities (Matlab C API)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/mex__cpp__util_8h/#file-mex-cpp-util.h&#34;&gt;ldsCtrlEst_h/mex_cpp_util.h&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;arma &amp;lt;-&amp;gt; mex interoperability utilities (Matlab C++ API)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Updated on 31 March 2025 at 16:04:30 EDT&lt;/p&gt;</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_ctrl.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__ctrl_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__ctrl_8h/</guid>
      <description>Controller.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_fit_em.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit__em_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit__em_8h/</guid>
      <description>subspace identification</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_fit_ssid.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit__ssid_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit__ssid_8h/</guid>
      <description>subspace identification</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_fit.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__fit_8h/</guid>
      <description>LDS base fit type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_gaussian_ctrl.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__ctrl_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__ctrl_8h/</guid>
      <description>GLDS Controller.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_gaussian_fit_em.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit__em_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit__em_8h/</guid>
      <description>GLDS E-M fit type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_gaussian_fit_ssid.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit__ssid_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit__ssid_8h/</guid>
      <description>GLDS SSID fit type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_gaussian_fit.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__fit_8h/</guid>
      <description>GLDS fit type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_gaussian_sctrl.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sctrl_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sctrl_8h/</guid>
      <description>GLDS switched controller type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_gaussian_sys.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sys_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sys_8h/</guid>
      <description>GLDS base type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_gaussian.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian_8h/</guid>
      <description>glds namespace</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_poisson_ctrl.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__ctrl_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__ctrl_8h/</guid>
      <description>PLDS controller type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_poisson_fit_em.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit__em_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit__em_8h/</guid>
      <description>PLDS E-M fit type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_poisson_fit_ssid.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit__ssid_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit__ssid_8h/</guid>
      <description>PLDS SSID fit type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_poisson_fit.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__fit_8h/</guid>
      <description>PLDS base fit type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_poisson_sctrl.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sctrl_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sctrl_8h/</guid>
      <description>PLDS switched controller type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_poisson_sys.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sys_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sys_8h/</guid>
      <description>PLDS base type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_poisson.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson_8h/</guid>
      <description>plds namespace</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_sctrl.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sctrl_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sctrl_8h/</guid>
      <description>SwitchedController type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_sys.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sys_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sys_8h/</guid>
      <description>LDS base type.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_uniform_mats.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__mats_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__mats_8h/</guid>
      <description>List of uniformly sized matrices.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_uniform_systems.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__systems_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__systems_8h/</guid>
      <description>List of uniformly sized Systems.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds_uniform_vecs.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__vecs_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__vecs_8h/</guid>
      <description>List of uniformly sized vectors.</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/lds.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds_8h/</guid>
      <description>lds namespace</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/mex_c_util.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/mex__c__util_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/mex__c__util_8h/</guid>
      <description>arma &amp;lt;-&amp;gt; mex interoperability utilities (Matlab C API)</description>
    </item>
    <item>
      <title>ldsCtrlEst_h/mex_cpp_util.h</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/mex__cpp__util_8h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/mex__cpp__util_8h/</guid>
      <description>arma &amp;lt;-&amp;gt; mex interoperability utilities (Matlab C++ API)</description>
    </item>
    <item>
      <title>src</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_68267d1309a1af8e8297ef4c3efbcdba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/dir_68267d1309a1af8e8297ef4c3efbcdba/</guid>
      <description>&lt;h1 id=&#34;src&#34;&gt;&#xA;  src&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#src&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;files&#34;&gt;&#xA;  Files&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#files&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds_8cpp/#file-lds.cpp&#34;&gt;src/lds.cpp&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;misc lds namespace functions&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sys_8cpp/#file-lds-gaussian-sys.cpp&#34;&gt;src/lds_gaussian_sys.cpp&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;GLDS base type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sys_8cpp/#file-lds-poisson-sys.cpp&#34;&gt;src/lds_poisson_sys.cpp&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;PLDS base type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sys_8cpp/#file-lds-sys.cpp&#34;&gt;src/lds_sys.cpp&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;LDS base type.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__vecs_8cpp/#file-lds-uniform-vecs.cpp&#34;&gt;src/lds_uniform_vecs.cpp&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;Uniformly sized vectors.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Updated on 31 March 2025 at 16:04:30 EDT&lt;/p&gt;</description>
    </item>
    <item>
      <title>src/lds_gaussian_sys.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sys_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__gaussian__sys_8cpp/</guid>
      <description>GLDS base type.</description>
    </item>
    <item>
      <title>src/lds_poisson_sys.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sys_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__poisson__sys_8cpp/</guid>
      <description>PLDS base type.</description>
    </item>
    <item>
      <title>src/lds_sys.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sys_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__sys_8cpp/</guid>
      <description>LDS base type.</description>
    </item>
    <item>
      <title>src/lds_uniform_vecs.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__vecs_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds__uniform__vecs_8cpp/</guid>
      <description>Uniformly sized vectors.</description>
    </item>
    <item>
      <title>src/lds.cpp</title>
      <link>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds_8cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://stanley-rozell.github.io/lds-ctrl-est/docs/api/files/lds_8cpp/</guid>
      <description>misc lds namespace functions</description>
    </item>
  </channel>
</rss>
