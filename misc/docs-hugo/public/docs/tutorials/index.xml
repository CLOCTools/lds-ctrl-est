<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LDS C&#43;E Examples on LDS C&amp;E</title>
    <link>https://mfbolus.github.io/ldsctrlest/docs/tutorials/</link>
    <description>Recent content in LDS C&#43;E Examples on LDS C&amp;E</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://mfbolus.github.io/ldsctrlest/docs/tutorials/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GLDS Control</title>
      <link>https://mfbolus.github.io/ldsctrlest/docs/tutorials/eg_glds_control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mfbolus.github.io/ldsctrlest/docs/tutorials/eg_glds_control/</guid>
      <description>GLDS Control Tutorial #  This tutorial shows how to use this library to control a system with a Gaussian LDS controller (lds::gaussian::Controller). In place of a physical system, a GLDS model (lds::gaussian::System) receives control inputs and simulates measurements for the feedback control loop. The controller is assumed to have an imperfect model of the system being controlled (here, a gain mismatch), and there is a stochastic, unmeasured disturbance acting on the system.</description>
    </item>
    
    <item>
      <title>PLDS State Estimation</title>
      <link>https://mfbolus.github.io/ldsctrlest/docs/tutorials/eg_plds_state_estimation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mfbolus.github.io/ldsctrlest/docs/tutorials/eg_plds_state_estimation/</guid>
      <description>PLDS State Estimation Tutorial #  This tutorial shows how to use this library to estimate the state of an LDS with Poisson observations from input/output data. In place of a physical system, another PLDS model (lds::poisson::System) receives random inputs and provides measurements for the state estimator. For the sake of example, the only parameter mismatch is assumed to be the process disturbance, which is adaptively re-estimated.
The full code for this can be found here.</description>
    </item>
    
    <item>
      <title>PLDS Switched Control</title>
      <link>https://mfbolus.github.io/ldsctrlest/docs/tutorials/eg_switched_plds_control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mfbolus.github.io/ldsctrlest/docs/tutorials/eg_switched_plds_control/</guid>
      <description>PLDS Switched Control Tutorial #  This tutorial shows how to use this library to control a system with a switched PLDS controller (lds::poisson::SwitchedController). This type of controller is applicable in scenarios where a physical system is not accurately captured by a single LDS but has multiple discrete operating modes where the dynamics can be well-approximated as linear.
In the example that follows, another PLDS model (lds::poisson::System) is used in place of a physical system.</description>
    </item>
    
  </channel>
</rss>
